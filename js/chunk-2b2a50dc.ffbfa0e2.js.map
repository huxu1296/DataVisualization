{"version":3,"sources":["webpack:///./src/views/components/page3/EmergingJobChart.vue","webpack:///EmergingJobChart.vue","webpack:///./src/views/components/page3/EmergingJobChart.vue?df8c","webpack:///./src/views/components/page3/EmergingJobChart.vue?55ac","webpack:///./src/views/components/page3/EmergingJobChart.vue?976c"],"names":["render","_vm","this","_c","_self","_setup","_setupProxy","staticClass","_m","directives","name","rawName","value","viewMode","expression","ref","_l","jobData","job","index","key","class","selectedJobIndex","on","$event","selectJob","_v","_s","job_title","trendClass","trendText","formatSalary","avg_salary","formatNumber","count","style","width","score","toFixed","n","prospectRating","setViewMode","staticRenderFns","chartContainer","chartInstance","generateIndustries","allIndustries","Math","floor","random","industries","includes","push","length","ind","computed","props","data","maxSalary","max","map","parseFloat","maxCount","avgSalary","normalizedSalary","normalizedCount","trend","ceil","salary","num","toString","replace","initChart","dispose","echarts","jobTitles","substring","salaryData","countData","scoreData","option","backgroundColor","title","show","tooltip","trigger","axisPointer","type","formatter","params","dataIndex","borderColor","borderWidth","padding","textStyle","color","grid","top","bottom","left","right","containLabel","legend","itemGap","xAxis","axisLabel","rotate","fontSize","interval","hideOverlap","axisLine","lineStyle","axisTick","alignWithLabel","yAxis","position","nameTextStyle","splitLine","series","itemStyle","LinearGradient","offset","borderRadius","barWidth","barGap","label","emphasis","yAxisIndex","smooth","symbol","symbolSize","z","x","y","x2","y2","colorStops","shadowColor","shadowBlur","fontWeight","scale","animationDuration","animationEasing","animationDelayUpdate","idx","setOption","componentType","mode","setTimeout","onMounted","watch","newVal","deep","window","addEventListener","resize","component"],"mappings":"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","file":"js/chunk-2b2a50dc.ffbfa0e2.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"emerging-job-chart\"},[_vm._m(0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.viewMode === 'chart'),expression:\"viewMode === 'chart'\"}],ref:\"chartContainer\",staticClass:\"chart-container\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_setup.viewMode === 'cards'),expression:\"viewMode === 'cards'\"}],staticClass:\"job-cards-container\"},_vm._l((_setup.jobData),function(job,index){return _c('div',{key:index,staticClass:\"job-card\",class:{ 'active': _setup.selectedJobIndex === index },on:{\"click\":function($event){return _setup.selectJob(index)}}},[_c('div',{staticClass:\"job-header\"},[_c('div',{staticClass:\"job-title\"},[_vm._v(_vm._s(job.job_title))]),_c('div',{staticClass:\"job-rank\"},[_c('span',{staticClass:\"rank-number\"},[_vm._v(\"#\"+_vm._s(index + 1))]),_c('span',{staticClass:\"trend-badge\",class:job.trendClass},[_vm._v(_vm._s(job.trendText))])])]),_c('div',{staticClass:\"metric-container\"},[_c('div',{staticClass:\"metric-row\"},[_c('div',{staticClass:\"metric salary\"},[_c('div',{staticClass:\"metric-value\"},[_vm._v(_vm._s(_setup.formatSalary(job.avg_salary)))]),_c('div',{staticClass:\"metric-label\"},[_vm._v(\"平均薪资\")]),_c('div',{staticClass:\"metric-icon\"},[_vm._v(\"💰\")])]),_c('div',{staticClass:\"metric count\"},[_c('div',{staticClass:\"metric-value\"},[_vm._v(_vm._s(_setup.formatNumber(job.count)))]),_c('div',{staticClass:\"metric-label\"},[_vm._v(\"招聘数量\")]),_c('div',{staticClass:\"metric-icon\"},[_vm._v(\"👥\")])])]),_c('div',{staticClass:\"score-bar\"},[_c('div',{staticClass:\"score-label\"},[_vm._v(\"综合评分\")]),_c('div',{staticClass:\"score-track\"},[_c('div',{staticClass:\"score-value\",style:({ width: `${job.score}%` })},[_vm._v(\" \"+_vm._s(job.score.toFixed(1))+\" \")])])]),_c('div',{staticClass:\"job-details\"},[_c('div',{staticClass:\"detail-item\"},[_c('span',{staticClass:\"detail-label\"},[_vm._v(\"就业前景:\")]),_c('span',{staticClass:\"detail-rating\"},_vm._l((5),function(n){return _c('span',{key:n,staticClass:\"star\",class:{ 'filled': n <= job.prospectRating }},[_vm._v(\"★\")])}),0)])])])])}),0),_c('div',{staticClass:\"view-toggle\"},[_c('button',{staticClass:\"toggle-btn\",class:{ 'active': _setup.viewMode === 'chart' },on:{\"click\":function($event){return _setup.setViewMode('chart')}}},[_c('i',{staticClass:\"toggle-icon\"},[_vm._v(\"📊\")]),_vm._v(\"图表视图 \")]),_c('button',{staticClass:\"toggle-btn\",class:{ 'active': _setup.viewMode === 'cards' },on:{\"click\":function($event){return _setup.setViewMode('cards')}}},[_c('i',{staticClass:\"toggle-icon\"},[_vm._v(\"🗂️\")]),_vm._v(\"卡片视图 \")])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"chart-title\"},[_c('span',{staticClass:\"title-text\"}),_c('div',{staticClass:\"title-decoration\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"emerging-job-chart\">\r\n    <div class=\"chart-title\">\r\n      <span class=\"title-text\"></span>\r\n      <div class=\"title-decoration\"></div>\r\n    </div>\r\n    \r\n    <div ref=\"chartContainer\" class=\"chart-container\" v-show=\"viewMode === 'chart'\"></div>\r\n    \r\n    <!-- 职位卡片容器 -->\r\n    <div class=\"job-cards-container\" v-show=\"viewMode === 'cards'\">\r\n      <div \r\n        v-for=\"(job, index) in jobData\" \r\n        :key=\"index\"\r\n        class=\"job-card\"\r\n        :class=\"{ 'active': selectedJobIndex === index }\"\r\n        @click=\"selectJob(index)\"\r\n      >\r\n        <div class=\"job-header\">\r\n          <div class=\"job-title\">{{ job.job_title }}</div>\r\n          <div class=\"job-rank\">\r\n            <span class=\"rank-number\">#{{ index + 1 }}</span>\r\n            <span class=\"trend-badge\" :class=\"job.trendClass\">{{ job.trendText }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"metric-container\">\r\n          <div class=\"metric-row\">\r\n            <div class=\"metric salary\">\r\n              <div class=\"metric-value\">{{ formatSalary(job.avg_salary) }}</div>\r\n              <div class=\"metric-label\">平均薪资</div>\r\n              <div class=\"metric-icon\">💰</div>\r\n            </div>\r\n            <div class=\"metric count\">\r\n              <div class=\"metric-value\">{{ formatNumber(job.count) }}</div>\r\n              <div class=\"metric-label\">招聘数量</div>\r\n              <div class=\"metric-icon\">👥</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"score-bar\">\r\n            <div class=\"score-label\">综合评分</div>\r\n            <div class=\"score-track\">\r\n              <div class=\"score-value\" :style=\"{ width: `${job.score}%` }\">\r\n                {{ job.score.toFixed(1) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"job-details\">\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">就业前景:</span>\r\n              <span class=\"detail-rating\">\r\n                <span class=\"star\" v-for=\"n in 5\" :key=\"n\" :class=\"{ 'filled': n <= job.prospectRating }\">★</span>\r\n              </span>\r\n            </div>\r\n            <!-- <div class=\"detail-item\">\r\n              <span class=\"detail-label\">行业分布:</span>\r\n              <span class=\"detail-badges\">\r\n                <span class=\"industry-badge\" v-for=\"(ind, i) in job.industries\" :key=\"i\">{{ ind }}</span>\r\n              </span>\r\n            </div> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 视图切换按钮 -->\r\n    <div class=\"view-toggle\">\r\n      <button \r\n        class=\"toggle-btn\" \r\n        :class=\"{ 'active': viewMode === 'chart' }\"\r\n        @click=\"setViewMode('chart')\"\r\n      >\r\n        <i class=\"toggle-icon\">📊</i>图表视图\r\n      </button>\r\n      <button \r\n        class=\"toggle-btn\" \r\n        :class=\"{ 'active': viewMode === 'cards' }\"\r\n        @click=\"setViewMode('cards')\"\r\n      >\r\n        <i class=\"toggle-icon\">🗂️</i>卡片视图\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport * as echarts from 'echarts'\r\n\r\nconst props = defineProps({ \r\n  data: {\r\n    type: Array,\r\n    default: () => []\r\n  }\r\n})\r\n\r\nconst chartContainer = ref(null)\r\nconst viewMode = ref('chart')\r\nconst selectedJobIndex = ref(0)\r\nlet chartInstance = null\r\n\r\n// 生成随机行业\r\nconst generateIndustries = (job) => {\r\n  const allIndustries = ['互联网', '金融', 'IT服务', '教育', '医疗', '制造业', '零售', '咨询', '通信', '房地产']\r\n  const count = 1 + Math.floor(Math.random() * 3) // 1-3个行业\r\n  const industries = []\r\n  \r\n  // 根据职位名称选择相关行业\r\n  if (job.job_title.includes('开发') || job.job_title.includes('工程师') || job.job_title.includes('程序')) {\r\n    industries.push('互联网', 'IT服务')\r\n  } else if (job.job_title.includes('销售') || job.job_title.includes('营销')) {\r\n    industries.push('零售', '咨询')\r\n  } else if (job.job_title.includes('金融') || job.job_title.includes('分析')) {\r\n    industries.push('金融', '咨询')\r\n  } else if (job.job_title.includes('教育') || job.job_title.includes('老师')) {\r\n    industries.push('教育')\r\n  } else if (job.job_title.includes('医') || job.job_title.includes('护')) {\r\n    industries.push('医疗')\r\n  } else {\r\n    // 随机选择行业\r\n    while (industries.length < count) {\r\n      const ind = allIndustries[Math.floor(Math.random() * allIndustries.length)]\r\n      if (!industries.includes(ind)) {\r\n        industries.push(ind)\r\n      }\r\n    }\r\n  }\r\n  \r\n  return industries\r\n}\r\n\r\n// 增强职位数据\r\nconst jobData = computed(() => {\r\n  if (!props.data || !props.data.length) return []\r\n  \r\n  // 获取最高薪资和招聘数量，用于归一化\r\n  const maxSalary = Math.max(...props.data.map(job => {\r\n    return typeof job.avg_salary === 'number' ? \r\n      job.avg_salary : parseFloat(job.avg_salary) || 0\r\n  }))\r\n  \r\n  const maxCount = Math.max(...props.data.map(job => {\r\n    return typeof job.count === 'number' ? \r\n      job.count : parseFloat(job.count) || 0\r\n  }))\r\n  \r\n  return props.data.map(job => {\r\n    // 确保数据类型正确\r\n    const avgSalary = typeof job.avg_salary === 'number' ? \r\n      job.avg_salary : parseFloat(job.avg_salary) || 0\r\n      \r\n    const count = typeof job.count === 'number' ? \r\n      job.count : parseFloat(job.count) || 0\r\n      \r\n    // 归一化处理\r\n    const normalizedSalary = avgSalary / maxSalary\r\n    const normalizedCount = count / maxCount\r\n    \r\n    // 计算综合评分 (薪资占70%, 数量占30%)\r\n    const score = (normalizedSalary * 0.7 + normalizedCount * 0.3) * 100\r\n    \r\n    // 根据评分确定趋势\r\n    let trend, trendText, trendClass\r\n    if (score >= 75) {\r\n      trend = 'rapid-rise'\r\n      trendText = '快速增长'\r\n      trendClass = 'trend-rapid-rise'\r\n    } else if (score >= 50) {\r\n      trend = 'rise'\r\n      trendText = '稳步上升'\r\n      trendClass = 'trend-rise'\r\n    } else if (score >= 25) {\r\n      trend = 'stable'\r\n      trendText = '需求稳定'\r\n      trendClass = 'trend-stable'\r\n    } else {\r\n      trend = 'decline'\r\n      trendText = '需求下降'\r\n      trendClass = 'trend-decline'\r\n    }\r\n    \r\n    // 就业前景评分 (1-5星)\r\n    const prospectRating = Math.ceil((score / 100) * 5)\r\n    \r\n    // 生成相关行业\r\n    const industries = generateIndustries(job)\r\n    \r\n    return {\r\n      job_title: job.job_title || '未知职位',\r\n      avg_salary: avgSalary,\r\n      count: count,\r\n      score,\r\n      trend,\r\n      trendText,\r\n      trendClass,\r\n      prospectRating,\r\n      industries\r\n    }\r\n  })\r\n})\r\n\r\n// 格式化薪资显示\r\nconst formatSalary = (salary) => {\r\n  if (typeof salary !== 'number') {\r\n    salary = parseFloat(salary) || 0\r\n  }\r\n  return salary.toFixed(1) + 'K'\r\n}\r\n\r\n// 格式化数字显示\r\nconst formatNumber = (num) => {\r\n  if (typeof num !== 'number') {\r\n    num = parseFloat(num) || 0\r\n  }\r\n  \r\n  if (num >= 10000) {\r\n    return (num / 10000).toFixed(1) + '万'\r\n  }\r\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n}\r\n\r\nconst initChart = () => {\r\n  if (!chartContainer.value || jobData.value.length === 0) return\r\n  \r\n  if (chartInstance) {\r\n    chartInstance.dispose()\r\n  }\r\n  \r\n  chartInstance = echarts.init(chartContainer.value)\r\n  \r\n  // 数据准备\r\n  const jobTitles = jobData.value.map(job => {\r\n    if (job.job_title.length > 8) {\r\n      return job.job_title.substring(0, 8) + '...'\r\n    }\r\n    return job.job_title\r\n  })\r\n  \r\n  // 创建两个维度数据: 薪资和数量\r\n  const salaryData = jobData.value.map(job => job.avg_salary)\r\n  const countData = jobData.value.map(job => job.count)\r\n  const scoreData = jobData.value.map(job => job.score)\r\n  \r\n  const option = {\r\n    backgroundColor: 'transparent',\r\n    title: {\r\n      show: false\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: { type: 'shadow' },\r\n      formatter: (params) => {\r\n        const index = params[0].dataIndex\r\n        const job = jobData.value[index]\r\n        if (!job) return ''\r\n        \r\n        return `\r\n          <div style=\"font-family: 'Microsoft YaHei', sans-serif;\">\r\n            <div style=\"font-weight:bold;color:#6EDDF1;margin-bottom:8px;font-size:16px;\">${job.job_title}</div>\r\n            <div style=\"display:flex;justify-content:space-between;margin-bottom:5px;\">\r\n              <span style=\"color:#eee;min-width:70px;\">平均薪资:</span>\r\n              <span style=\"color:#FFD700;font-weight:bold;\">${formatSalary(job.avg_salary)}</span>\r\n            </div>\r\n            <div style=\"display:flex;justify-content:space-between;margin-bottom:5px;\">\r\n              <span style=\"color:#eee;min-width:70px;\">招聘数量:</span>\r\n              <span style=\"color:#fff;font-weight:bold;\">${formatNumber(job.count)}</span>\r\n            </div>\r\n            <div style=\"display:flex;justify-content:space-between;margin-bottom:5px;\">\r\n              <span style=\"color:#eee;min-width:70px;\">综合评分:</span>\r\n              <span style=\"color:#FF7E45;font-weight:bold;\">${job.score.toFixed(1)}</span>\r\n            </div>\r\n            <div style=\"display:flex;justify-content:space-between;margin-bottom:5px;\">\r\n              <span style=\"color:#eee;min-width:70px;\">发展趋势:</span>\r\n              <span style=\"color:#fff;\">${job.trendText}</span>\r\n            </div>\r\n          </div>\r\n        `\r\n      },\r\n      backgroundColor: 'rgba(13, 36, 81, 0.9)',\r\n      borderColor: 'rgba(109, 198, 255, 0.4)',\r\n      borderWidth: 1,\r\n      padding: 10,\r\n      textStyle: {\r\n        color: '#fff'\r\n      }\r\n    },\r\n    grid: {\r\n      top: 60,\r\n      bottom: 40,\r\n      left: 50,\r\n      right: 50,\r\n      containLabel: true\r\n    },\r\n    legend: {\r\n      data: ['平均薪资', '招聘数量', '综合评分'],\r\n      textStyle: { color: '#ddd' },\r\n      top: 20,\r\n      itemGap: 30\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'category',\r\n        data: jobTitles,\r\n        axisLabel: {\r\n          color: '#fff',\r\n          rotate: 45,\r\n          fontSize: 12,\r\n          interval: 0,\r\n          hideOverlap: true\r\n        },\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.3)'\r\n          }\r\n        },\r\n        axisTick: {\r\n          alignWithLabel: true,\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.3)'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        name: '平均薪资 (K)',\r\n        position: 'left',\r\n        nameTextStyle: {\r\n          color: '#00c0ff',\r\n          fontSize: 12,\r\n          padding: [0, 0, 0, -20]\r\n        },\r\n        axisLabel: {\r\n          color: '#ddd',\r\n          formatter: '{value}K'\r\n        },\r\n        axisLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: '#00c0ff'\r\n          }\r\n        },\r\n        splitLine: {\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.1)'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        type: 'value',\r\n        name: '招聘数量',\r\n        position: 'right',\r\n        nameTextStyle: {\r\n          color: '#ff7a45',\r\n          fontSize: 12,\r\n          padding: [0, -20, 0, 0]\r\n        },\r\n        axisLabel: {\r\n          color: '#ddd',\r\n          formatter: (value) => {\r\n            if (value >= 10000) {\r\n              return (value / 10000).toFixed(1) + '万'\r\n            }\r\n            return value\r\n          }\r\n        },\r\n        axisLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: '#ff7a45'\r\n          }\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        }\r\n      }\r\n    ],\r\n    series: [\r\n      {\r\n        name: '平均薪资',\r\n        type: 'bar',\r\n        data: salaryData,\r\n        itemStyle: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            { offset: 0, color: '#00c0ff' },\r\n            { offset: 1, color: '#0082af' }\r\n          ]),\r\n          borderRadius: [6, 6, 0, 0]\r\n        },\r\n        barWidth: '25%',\r\n        barGap: '30%',\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n          formatter: '{c}K',\r\n          color: '#fff',\r\n          fontSize: 12\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: '#33d6ff' },\r\n              { offset: 1, color: '#00a3d9' }\r\n            ])\r\n          }\r\n        }\r\n      },\r\n      {\r\n        name: '招聘数量',\r\n        type: 'bar',\r\n        yAxisIndex: 1,\r\n        data: countData,\r\n        itemStyle: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            { offset: 0, color: '#ff7a45' },\r\n            { offset: 1, color: '#cc4400' }\r\n          ]),\r\n          borderRadius: [6, 6, 0, 0]\r\n        },\r\n        barWidth: '25%',\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n          color: '#fff',\r\n          fontSize: 12,\r\n          formatter: (params) => {\r\n            const value = params.value\r\n            if (value >= 10000) {\r\n              return (value / 10000).toFixed(1) + '万'\r\n            }\r\n            return value\r\n          }\r\n        },\r\n        emphasis: {\r\n          itemStyle: {\r\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              { offset: 0, color: '#ff956c' },\r\n              { offset: 1, color: '#ee5522' }\r\n            ])\r\n          }\r\n        }\r\n      },\r\n      {\r\n        name: '综合评分',\r\n        type: 'line',\r\n        smooth: true,\r\n        symbol: 'circle',\r\n        symbolSize: 10,\r\n        data: scoreData,\r\n        z: 3,\r\n        lineStyle: {\r\n          width: 4,\r\n          color: {\r\n            type: 'linear',\r\n            x: 0,\r\n            y: 0,\r\n            x2: 1,\r\n            y2: 0,\r\n            colorStops: [\r\n              { offset: 0, color: '#faad14' },\r\n              { offset: 1, color: '#ff6e76' }\r\n            ]\r\n          },\r\n          shadowColor: 'rgba(250, 173, 20, 0.3)',\r\n          shadowBlur: 10\r\n        },\r\n        itemStyle: {\r\n          color: '#faad14',\r\n          borderWidth: 3,\r\n          borderColor: '#fff'\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: 'top',\r\n          formatter: (params) => {\r\n            return params.value.toFixed(1)\r\n          },\r\n          color: '#faad14',\r\n          fontSize: 12,\r\n          fontWeight: 'bold'\r\n        },\r\n        emphasis: {\r\n          scale: true\r\n        }\r\n      }\r\n    ],\r\n    // 添加动画效果\r\n    animationDuration: 2000,\r\n    animationEasing: 'elasticOut',\r\n    animationDelayUpdate: (idx) => idx * 200\r\n  }\r\n\r\n  chartInstance.setOption(option)\r\n  \r\n  // 点击事件\r\n  chartInstance.on('click', (params) => {\r\n    if (params.componentType === 'series') {\r\n      selectedJobIndex.value = params.dataIndex\r\n      setViewMode('cards')\r\n    }\r\n  })\r\n}\r\n\r\n// 设置视图模式\r\nconst setViewMode = (mode) => {\r\n  viewMode.value = mode\r\n  \r\n  // 如果切换到图表模式，确保图表渲染正确\r\n  if (mode === 'chart' && chartContainer.value) {\r\n    setTimeout(() => {\r\n      initChart()\r\n    }, 50)\r\n  }\r\n}\r\n\r\n// 选择职位\r\nconst selectJob = (index) => {\r\n  selectedJobIndex.value = index\r\n}\r\n\r\nonMounted(() => {\r\n  if (jobData.value && jobData.value.length > 0) {\r\n    initChart()\r\n  }\r\n})\r\n\r\nwatch(() => props.data, (newVal) => {\r\n  if (newVal && newVal.length > 0) {\r\n    initChart()\r\n  }\r\n}, { deep: true })\r\n\r\n// 响应窗口大小变化\r\nwindow.addEventListener('resize', () => {\r\n  if (chartInstance && viewMode.value === 'chart') {\r\n    chartInstance.resize()\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.emerging-job-chart {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-text {\r\n  color: #6EDDF1;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  text-shadow: 0 0 10px rgba(110, 221, 241, 0.3);\r\n}\r\n\r\n.title-decoration {\r\n  position: absolute;\r\n  bottom: -5px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 60px;\r\n  height: 2px;\r\n  background: linear-gradient(90deg, transparent, #6EDDF1, transparent);\r\n}\r\n\r\n.chart-container {\r\n  width: 100%;\r\n  flex: 1;\r\n  transition: opacity 0.3s;\r\n  position: relative;\r\n}\r\n\r\n.chart-container::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: radial-gradient(ellipse at center, rgba(110, 221, 241, 0.03) 0%, transparent 70%);\r\n  pointer-events: none;\r\n}\r\n\r\n.job-cards-container {\r\n  position: absolute;\r\n  top: 50px;\r\n  left: 15px;\r\n  right: 15px;\r\n  bottom: 50px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  transition: opacity 0.3s;\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(255, 255, 255, 0.05);\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(110, 221, 241, 0.4);\r\n    border-radius: 3px;\r\n  }\r\n}\r\n\r\n.job-card {\r\n  background: rgba(21, 40, 90, 0.7);\r\n  border: 1px solid rgba(109, 198, 255, 0.3);\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  animation: fadeIn 0.5s ease-out;\r\n  \r\n  &:hover {\r\n    background: rgba(32, 56, 117, 0.8);\r\n    border-color: rgba(109, 198, 255, 0.5);\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  &.active {\r\n    background: rgba(48, 78, 138, 0.8);\r\n    border-color: rgba(110, 221, 241, 0.7);\r\n    box-shadow: 0 0 20px rgba(110, 221, 241, 0.3);\r\n  }\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.job-header {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.job-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  flex: 1;\r\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.2);\r\n  line-height: 1.3;\r\n}\r\n\r\n.job-rank {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  gap: 5px;\r\n}\r\n\r\n.rank-number {\r\n  background: rgba(110, 221, 241, 0.2);\r\n  color: #6EDDF1;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.trend-badge {\r\n  font-size: 12px;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-weight: 500;\r\n  \r\n  &.trend-rapid-rise {\r\n    background: rgba(0, 255, 0, 0.1);\r\n    color: #00ff00;\r\n  }\r\n  \r\n  &.trend-rise {\r\n    background: rgba(0, 200, 83, 0.1);\r\n    color: #00c853;\r\n  }\r\n  \r\n  &.trend-stable {\r\n    background: rgba(255, 193, 7, 0.1);\r\n    color: #ffc107;\r\n  }\r\n  \r\n  &.trend-decline {\r\n    background: rgba(255, 87, 34, 0.1);\r\n    color: #ff5722;\r\n  }\r\n}\r\n\r\n.metric-container {\r\n  background: rgba(13, 36, 81, 0.5);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n}\r\n\r\n.metric-row {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.metric {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  position: relative;\r\n  text-align: center;\r\n  \r\n  &.salary {\r\n    background: linear-gradient(145deg, rgba(0, 192, 255, 0.1), rgba(0, 128, 175, 0.2));\r\n    \r\n    .metric-value {\r\n      color: #00c0ff;\r\n    }\r\n  }\r\n  \r\n  &.count {\r\n    background: linear-gradient(145deg, rgba(255, 122, 69, 0.1), rgba(204, 68, 0, 0.2));\r\n    \r\n    .metric-value {\r\n      color: #ff7a45;\r\n    }\r\n  }\r\n  \r\n  .metric-icon {\r\n    position: absolute;\r\n    top: 8px;\r\n    right: 8px;\r\n    font-size: 16px;\r\n    opacity: 0.7;\r\n  }\r\n  \r\n  .metric-value {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin-bottom: 4px;\r\n  }\r\n  \r\n  .metric-label {\r\n    font-size: 12px;\r\n    color: #aaa;\r\n  }\r\n}\r\n\r\n.score-bar {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.score-label {\r\n  font-size: 13px;\r\n  color: #ddd;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.score-track {\r\n  height: 20px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.score-value {\r\n  height: 100%;\r\n  background: linear-gradient(90deg, #faad14, #ff6e76);\r\n  border-radius: 10px;\r\n  text-align: right;\r\n  padding-right: 8px;\r\n  color: #fff;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  line-height: 20px;\r\n  box-shadow: 0 0 10px rgba(250, 173, 20, 0.3);\r\n  transition: width 1s ease-out;\r\n}\r\n\r\n.job-details {\r\n  background: rgba(13, 36, 81, 0.3);\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n}\r\n\r\n.detail-item {\r\n  margin-bottom: 8px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.detail-label {\r\n  color: #aaa;\r\n  font-size: 12px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.detail-rating {\r\n  .star {\r\n    color: rgba(255, 255, 255, 0.3);\r\n    font-size: 14px;\r\n    \r\n    &.filled {\r\n      color: #faad14;\r\n    }\r\n  }\r\n}\r\n\r\n.detail-badges {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n  margin-top: 5px;\r\n  \r\n  .industry-badge {\r\n    font-size: 10px;\r\n    padding: 2px 6px;\r\n    border-radius: 10px;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    color: #ddd;\r\n  }\r\n}\r\n\r\n.view-toggle {\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  background: rgba(13, 36, 81, 0.8);\r\n  border-radius: 20px;\r\n  padding: 3px;\r\n  border: 1px solid rgba(109, 198, 255, 0.3);\r\n  z-index: 20;\r\n  \r\n  .toggle-btn {\r\n    background: transparent;\r\n    border: none;\r\n    color: #bbb;\r\n    padding: 5px 10px;\r\n    border-radius: 18px;\r\n    cursor: pointer;\r\n    font-size: 12px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: all 0.2s;\r\n    \r\n    .toggle-icon {\r\n      margin-right: 5px;\r\n      font-style: normal;\r\n    }\r\n    \r\n    &.active {\r\n      background: rgba(110, 221, 241, 0.2);\r\n      color: #6EDDF1;\r\n    }\r\n    \r\n    &:hover:not(.active) {\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./EmergingJobChart.vue?vue&type=script&setup=true&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./EmergingJobChart.vue?vue&type=script&setup=true&lang=js\"","import { render, staticRenderFns } from \"./EmergingJobChart.vue?vue&type=template&id=4ac63da0&scoped=true\"\nimport script from \"./EmergingJobChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmergingJobChart.vue?vue&type=script&setup=true&lang=js\"\nimport style0 from \"./EmergingJobChart.vue?vue&type=style&index=0&id=4ac63da0&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4ac63da0\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/.store/less-loader@5.0.0/node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./EmergingJobChart.vue?vue&type=style&index=0&id=4ac63da0&prod&lang=less&scoped=true\""],"sourceRoot":""}