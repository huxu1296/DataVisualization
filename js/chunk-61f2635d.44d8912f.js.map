{"version":3,"sources":["webpack:///./src/views/components/page3/IndustryTrendChart.vue?f799","webpack:///./src/views/components/page3/IndustryTrendChart.vue","webpack:///IndustryTrendChart.vue","webpack:///./src/views/components/page3/IndustryTrendChart.vue?8d30","webpack:///./src/views/components/page3/IndustryTrendChart.vue?5f4b"],"names":["render","_vm","this","_c","_self","_setup","_setupProxy","staticClass","ref","staticStyle","loading","_e","staticRenderFns","chartContainer","chartInstance","getIndustryData","data","Array","isArray","industryData","maxEducationScore","maxExperienceScore","getEducationDescription","score","getExperienceDescription","initChart","value","props","console","log","length","dispose","echarts","parallelAxis","maxSalary","Math","max","map","d","avgSalary","push","dim","name","ceil","nameTextStyle","color","fontSize","fontWeight","axisLabel","formatter","axisLine","lineStyle","width","min","show","toFixed","maxCount","count","parallelData","item","index","lineData","educationScore","experienceScore","option","backgroundColor","tooltip","trigger","params","seriesType","dataIndex","html","eduCodeCounts","Object","keys","entries","forEach","code","percent","expCodeCounts","borderColor","borderWidth","padding","textStyle","visualMap","dimension","right","top","text","calculable","inRange","reverse","parallel","left","bottom","parallelAxisDefault","type","nameLocation","nameGap","axisTick","splitLine","series","opacity","shadowBlur","shadowColor","emphasis","setOption","on","componentType","existingLabel","querySelector","remove","industryLabel","document","createElement","className","textContent","style","cssText","appendChild","setTimeout","parentNode","removeChild","handleResize","resize","onMounted","window","addEventListener","onBeforeUnmount","removeEventListener","watch","newVal","deep","component"],"mappings":"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","file":"js/chunk-61f2635d.44d8912f.js","sourcesContent":["export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./IndustryTrendChart.vue?vue&type=style&index=0&id=44b61d0a&prod&scoped=true&lang=css\"","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"industry-trend-chart\"},[_c('div',{ref:\"chartContainer\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}}),(_setup.loading)?_c('div',{staticClass:\"loading-indicator\"},[_c('div',{staticClass:\"spinner\"})]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"industry-trend-chart\">\r\n    <div ref=\"chartContainer\" style=\"width: 100%; height: 100%\"></div>\r\n    <div v-if=\"loading\" class=\"loading-indicator\">\r\n      <div class=\"spinner\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref, watch, onBeforeUnmount } from 'vue'\r\nimport * as echarts from 'echarts'\r\n\r\nconst props = defineProps({ \r\n  data: {\r\n    type: [Array, Object],\r\n    default: () => []\r\n  }\r\n})\r\n\r\nconst chartContainer = ref(null)\r\nlet chartInstance = null\r\nconst loading = ref(true)\r\n\r\n// 安全获取数据，确保支持新旧数据格式\r\nconst getIndustryData = (data) => {\r\n  if (!data) return { industryData: [], maxEducationScore: 6, maxExperienceScore: 5 }\r\n  \r\n  if (Array.isArray(data)) {\r\n    return { \r\n      industryData: data,\r\n      maxEducationScore: 6,\r\n      maxExperienceScore: 5\r\n    }\r\n  }\r\n  \r\n  if (data.industryData && Array.isArray(data.industryData)) {\r\n    return data\r\n  }\r\n  \r\n  return { industryData: [], maxEducationScore: 6, maxExperienceScore: 5 }\r\n}\r\n\r\n// 学历分值到描述的映射（用于工具提示）\r\nconst getEducationDescription = (score) => {\r\n  if (score >= 5.5) return '博士为主'\r\n  if (score >= 4.5) return '硕士为主'\r\n  if (score >= 3.5) return '本科为主' \r\n  if (score >= 2.5) return '大专为主'\r\n  if (score >= 1.5) return '中专为主'\r\n  if (score >= 0.5) return '高中为主'\r\n  return '无明确要求'\r\n}\r\n\r\n// 经验分值到描述的映射（用于工具提示）\r\nconst getExperienceDescription = (score) => {\r\n  if (score >= 4.5) return '10年以上为主'\r\n  if (score >= 3.5) return '5-10年为主'\r\n  if (score >= 2.5) return '3-5年为主'\r\n  if (score >= 1.5) return '1-3年为主'\r\n  if (score >= 0.5) return '应届毕业生为主'\r\n  return '无明确要求'\r\n}\r\n\r\nconst initChart = () => {\r\n  if (!chartContainer.value) return\r\n  loading.value = true\r\n  \r\n  const { industryData, maxEducationScore, maxExperienceScore } = getIndustryData(props.data)\r\n  \r\n  console.log('获取的数据:', { industryData: industryData.length, maxEducationScore, maxExperienceScore })\r\n  \r\n  if (industryData.length === 0) {\r\n    loading.value = false\r\n    return\r\n  }\r\n  \r\n  if (chartInstance) {\r\n    chartInstance.dispose()\r\n  }\r\n  \r\n  chartInstance = echarts.init(chartContainer.value)\r\n  \r\n  // 准备平行坐标轴 - 4个轴：薪酬、学历要求、经验要求、招聘数量\r\n  const parallelAxis = []\r\n  \r\n  // 1. 平均薪酬坐标轴\r\n  const maxSalary = Math.max(...industryData.map(d => d.avgSalary || 0))\r\n  parallelAxis.push({\r\n    dim: 0,\r\n    name: '平均薪酬', \r\n    max: Math.ceil(maxSalary * 1.1 / 10) * 10, // 向上取整到10的倍数\r\n    nameTextStyle: { \r\n      color: '#6EDDF1',\r\n      fontSize: 14,\r\n      fontWeight: 'bold'\r\n    },\r\n    axisLabel: {\r\n      formatter: '{value}K',\r\n      color: '#fff',\r\n      fontSize: 11\r\n    },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: 'rgba(110, 221, 241, 0.8)',\r\n        width: 2\r\n      }\r\n    }\r\n  })\r\n  \r\n  // 2. 学历要求坐标轴（分值）\r\n  parallelAxis.push({\r\n    dim: 1,\r\n    name: '学历要求',\r\n    min: 0,\r\n    max: 6,\r\n    nameTextStyle: {\r\n      color: '#00CCFF',\r\n      fontSize: 14,\r\n      fontWeight: 'bold'\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      formatter: (value) => {\r\n        return value.toFixed(1) + '/6'\r\n      },\r\n      color: '#00CCFF',\r\n      fontSize: 11\r\n    },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: 'rgba(0, 204, 255, 0.8)',\r\n        width: 2\r\n      }\r\n    }\r\n  })\r\n  \r\n  // 3. 经验要求坐标轴（分值）\r\n  parallelAxis.push({\r\n    dim: 2,\r\n    name: '经验要求',\r\n    min: 0,\r\n    max: 5,\r\n    nameTextStyle: {\r\n      color: '#F83552',\r\n      fontSize: 14,\r\n      fontWeight: 'bold'\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      formatter: (value) => {\r\n        return value.toFixed(1) + '/5'\r\n      },\r\n      color: '#F83552',\r\n      fontSize: 11\r\n    },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: 'rgba(248, 53, 82, 0.8)',\r\n        width: 2\r\n      }\r\n    }\r\n  })\r\n  \r\n  // 4. 招聘数量坐标轴\r\n  const maxCount = Math.max(...industryData.map(d => d.count || 0))\r\n  parallelAxis.push({\r\n    dim: 3,\r\n    name: '招聘数量', \r\n    max: Math.ceil(maxCount * 1.1 / 1000) * 1000, // 向上取整到1000的倍数\r\n    nameTextStyle: { \r\n      color: '#FFEB3B',\r\n      fontSize: 14,\r\n      fontWeight: 'bold'\r\n    },\r\n    axisLabel: {\r\n      formatter: (value) => {\r\n        if (value >= 1000) {\r\n          return (value / 1000).toFixed(1) + 'K'\r\n        }\r\n        return value\r\n      },\r\n      color: '#FFEB3B',\r\n      fontSize: 11\r\n    },\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: 'rgba(255, 235, 59, 0.8)',\r\n        width: 2\r\n      }\r\n    }\r\n  })\r\n  \r\n  // 准备平行坐标数据 - 每条线必须经过所有4个坐标轴\r\n  const parallelData = industryData.map((item, index) => {\r\n    const lineData = [\r\n      item.avgSalary || 0,          // 平均薪酬\r\n      item.educationScore || 0,     // 学历要求分值 \r\n      item.experienceScore || 0,    // 经验要求分值\r\n      item.count || 0               // 招聘数量\r\n    ]\r\n    \r\n    console.log(`${item.name}: [薪酬:${lineData[0]}, 学历:${lineData[1]}, 经验:${lineData[2]}, 数量:${lineData[3]}]`)\r\n    return lineData\r\n  })\r\n  \r\n  const option = {\r\n    backgroundColor: 'transparent',\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: (params) => {\r\n        if (params.seriesType !== 'parallel') return ''\r\n        \r\n        const item = industryData[params.dataIndex]\r\n        if (!item) return ''\r\n        \r\n        // 构建详细信息的HTML\r\n        let html = `\r\n          <div style=\"font-weight:bold;color:#6EDDF1;margin-bottom:10px;font-size:18px;\">${item.name}</div>\r\n          <div style=\"display:flex;justify-content:space-between;margin-bottom:6px;background:rgba(0,0,0,0.2);padding:4px 8px;border-radius:4px;\">\r\n            <span style=\"color:#eee;\">平均薪资:</span>\r\n            <span style=\"color:#FFD700;font-weight:bold;\">${(item.avgSalary || 0).toFixed(1)}K</span>\r\n          </div>\r\n          <div style=\"display:flex;justify-content:space-between;margin-bottom:6px;background:rgba(0,0,0,0.2);padding:4px 8px;border-radius:4px;\">\r\n            <span style=\"color:#eee;\">学历要求:</span>\r\n            <span style=\"color:#00CCFF;font-weight:bold;\">${item.educationScore.toFixed(1)}/6 (${getEducationDescription(item.educationScore)})</span>\r\n          </div>\r\n          <div style=\"display:flex;justify-content:space-between;margin-bottom:6px;background:rgba(0,0,0,0.2);padding:4px 8px;border-radius:4px;\">\r\n            <span style=\"color:#eee;\">经验要求:</span>\r\n            <span style=\"color:#F83552;font-weight:bold;\">${item.experienceScore.toFixed(1)}/5 (${getExperienceDescription(item.experienceScore)})</span>\r\n          </div>\r\n          <div style=\"display:flex;justify-content:space-between;margin-bottom:6px;background:rgba(0,0,0,0.2);padding:4px 8px;border-radius:4px;\">\r\n            <span style=\"color:#eee;\">招聘数量:</span>\r\n            <span style=\"color:#FFEB3B;font-weight:bold;\">${item.count || 0}</span>\r\n          </div>\r\n        `\r\n        \r\n        // 显示具体的学历经验分布（如果数据存在）\r\n        if (item.eduCodeCounts && Object.keys(item.eduCodeCounts).length > 0) {\r\n          html += `<div style=\"color:#00CCFF;font-weight:bold;margin:8px 0 4px 0;border-bottom:1px solid #00CCFF;padding-bottom:2px;\">学历分布详情</div>`\r\n          Object.entries(item.eduCodeCounts).forEach(([code, count]) => {\r\n            const percent = ((count / item.count) * 100).toFixed(1)\r\n            const name = {\r\n              'EDD': '博士', 'EQH': '硕士', 'EAS': '本科', \r\n              'EZN': '大专', 'EBY': '中专', 'EKK': '高中'\r\n            }[code] || code\r\n            html += `\r\n              <div style=\"display:flex;justify-content:space-between;margin-bottom:3px;padding-left:8px;\">\r\n                <span style=\"color:#eee;\">${name}:</span>\r\n                <span style=\"color:#00CCFF;\">${percent}%</span>\r\n              </div>\r\n            `\r\n          })\r\n        }\r\n        \r\n        if (item.expCodeCounts && Object.keys(item.expCodeCounts).length > 0) {\r\n          html += `<div style=\"color:#F83552;font-weight:bold;margin:8px 0 4px 0;border-bottom:1px solid #F83552;padding-bottom:2px;\">经验分布详情</div>`\r\n          Object.entries(item.expCodeCounts).forEach(([code, count]) => {\r\n            const percent = ((count / item.count) * 100).toFixed(1)\r\n            const name = {\r\n              'GZ': '10年以上', 'GD': '5-10年', 'GI': '3-5年',\r\n              'GX': '1-3年', 'GP': '应届毕业生'\r\n            }[code] || code\r\n            html += `\r\n              <div style=\"display:flex;justify-content:space-between;margin-bottom:3px;padding-left:8px;\">\r\n                <span style=\"color:#eee;\">${name}:</span>\r\n                <span style=\"color:#F83552;\">${percent}%</span>\r\n              </div>\r\n            `\r\n          })\r\n        }\r\n        \r\n        return html\r\n      },\r\n      backgroundColor: 'rgba(13, 36, 81, 0.95)',\r\n      borderColor: 'rgba(109, 198, 255, 0.5)',\r\n      borderWidth: 1,\r\n      padding: [12, 15],\r\n      textStyle: {\r\n        color: '#fff',\r\n        fontSize: 12\r\n      }\r\n    },\r\n    visualMap: {\r\n      show: true,\r\n      min: 0,\r\n      max: Math.max(...industryData.map(d => d.avgSalary || 0)),\r\n      dimension: 0, // 基于平均薪酬进行颜色映射\r\n      right: 15,\r\n      top: 'center',\r\n      text: ['高薪', '低薪'],\r\n      calculable: true,\r\n      inRange: {\r\n        color: [\r\n          '#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8',\r\n          '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026'\r\n        ].reverse()\r\n      },\r\n      textStyle: {\r\n        color: '#fff',\r\n        fontSize: 11\r\n      }\r\n    },\r\n    parallel: {\r\n      left: '8%',    // 向右移动图表\r\n      right: '22%',\r\n      bottom: '8%',\r\n      top: '15%',    // 避免与标题重叠\r\n      parallelAxisDefault: {\r\n        type: 'value',\r\n        nameLocation: 'end',\r\n        nameGap: 25,\r\n        nameTextStyle: {\r\n          fontWeight: 'bold',\r\n          fontSize: 13\r\n        },\r\n        axisLine: {\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.6)',\r\n            width: 2\r\n          }\r\n        },\r\n        axisTick: {\r\n          show: true,\r\n          length: 5,\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.4)',\r\n            width: 1\r\n          }\r\n        },\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: 'rgba(255, 255, 255, 0.1)',\r\n            type: 'dashed'\r\n          }\r\n        },\r\n        axisLabel: {\r\n          fontSize: 11\r\n        }\r\n      }\r\n    },\r\n    parallelAxis,\r\n    series: [\r\n      {\r\n        name: '行业指标',\r\n        type: 'parallel',\r\n        lineStyle: {\r\n          width: 3,\r\n          opacity: 0.7,\r\n          shadowBlur: 8,\r\n          shadowColor: 'rgba(0, 0, 0, 0.4)'\r\n        },\r\n        emphasis: {\r\n          lineStyle: {\r\n            width: 5,\r\n            opacity: 1,\r\n            shadowBlur: 20,\r\n            shadowColor: 'rgba(255, 255, 255, 0.6)'\r\n          }\r\n        },\r\n        data: parallelData\r\n      }\r\n    ]\r\n  }\r\n  \r\n  chartInstance.setOption(option)\r\n  loading.value = false\r\n  \r\n  // 添加行业名称悬浮显示 - 位置调整到底部避免覆盖标题\r\n  chartInstance.on('mouseover', (params) => {\r\n    if (params.componentType === 'series' && params.seriesType === 'parallel') {\r\n      const item = industryData[params.dataIndex]\r\n      if (item) {\r\n        // 删除之前的行业名称显示\r\n        const existingLabel = chartContainer.value.querySelector('.industry-label')\r\n        if (existingLabel) {\r\n          existingLabel.remove()\r\n        }\r\n        \r\n        const industryLabel = document.createElement('div')\r\n        industryLabel.className = 'industry-label'\r\n        industryLabel.textContent = item.name\r\n        industryLabel.style.cssText = `\r\n          position: absolute;\r\n          bottom: 30px;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n          color: #6EDDF1;\r\n          text-shadow: 0 0 15px rgba(110, 221, 241, 0.8);\r\n          z-index: 1000;\r\n          background: linear-gradient(135deg, rgba(21, 20, 86, 0.9), rgba(13, 36, 81, 0.9));\r\n          padding: 8px 20px;\r\n          border-radius: 25px;\r\n          border: 2px solid rgba(110, 221, 241, 0.5);\r\n          backdrop-filter: blur(10px);\r\n          transition: all 0.3s ease;\r\n        `\r\n        chartContainer.value.appendChild(industryLabel)\r\n      }\r\n    }\r\n  })\r\n  \r\n  chartInstance.on('mouseout', () => {\r\n    const industryLabel = chartContainer.value.querySelector('.industry-label')\r\n    if (industryLabel) {\r\n      industryLabel.style.opacity = '0'\r\n      setTimeout(() => {\r\n        if (industryLabel.parentNode) {\r\n          industryLabel.parentNode.removeChild(industryLabel)\r\n        }\r\n      }, 300)\r\n    }\r\n  })\r\n}\r\n\r\n// 窗口大小变化处理\r\nconst handleResize = () => {\r\n  if (chartInstance) {\r\n    chartInstance.resize()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  window.addEventListener('resize', handleResize)\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('resize', handleResize)\r\n  if (chartInstance) {\r\n    chartInstance.dispose()\r\n    chartInstance = null\r\n  }\r\n})\r\n\r\nwatch(() => props.data, (newVal) => {\r\n  if (newVal) {\r\n    initChart()\r\n  }\r\n}, { deep: true })\r\n</script>\r\n\r\n<style scoped>\r\n.industry-trend-chart {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  background: linear-gradient(135deg, #151456 0%, #0d2451 100%);\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n}\r\n\r\n.industry-trend-chart::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: -50%;\r\n  left: -50%;\r\n  width: 200%;\r\n  height: 200%;\r\n  background: radial-gradient(\r\n    ellipse at center, \r\n    rgba(110, 221, 241, 0.08) 0%, \r\n    rgba(0, 204, 255, 0.03) 40%,\r\n    transparent 70%\r\n  );\r\n  z-index: 0;\r\n  pointer-events: none;\r\n  animation: subtle-glow 8s ease-in-out infinite alternate;\r\n}\r\n\r\n@keyframes subtle-glow {\r\n  0% { transform: translate(-50%, -50%) scale(1); }\r\n  100% { transform: translate(-50%, -50%) scale(1.1); }\r\n}\r\n\r\n.loading-indicator {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(21, 20, 86, 0.8);\r\n  z-index: 100;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.spinner {\r\n  width: 45px;\r\n  height: 45px;\r\n  border: 4px solid rgba(110, 221, 241, 0.2);\r\n  border-left-color: #6EDDF1;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 自定义工具提示动画 */\r\n.industry-label {\r\n  animation: fadeInScale 0.3s ease-out;\r\n}\r\n\r\n@keyframes fadeInScale {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateX(-50%) scale(0.8);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(-50%) scale(1);\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./IndustryTrendChart.vue?vue&type=script&setup=true&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./IndustryTrendChart.vue?vue&type=script&setup=true&lang=js\"","import { render, staticRenderFns } from \"./IndustryTrendChart.vue?vue&type=template&id=44b61d0a&scoped=true\"\nimport script from \"./IndustryTrendChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IndustryTrendChart.vue?vue&type=script&setup=true&lang=js\"\nimport style0 from \"./IndustryTrendChart.vue?vue&type=style&index=0&id=44b61d0a&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"44b61d0a\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}