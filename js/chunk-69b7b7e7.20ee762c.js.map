{"version":3,"sources":["webpack:///./src/views/components/page1/salaryBox.vue","webpack:///src/views/components/page1/salaryBox.vue","webpack:///./src/views/components/page1/salaryBox.vue?6c2e","webpack:///./src/views/components/page1/salaryBox.vue?0156","webpack:///./src/views/components/page1/salaryBox.vue?7b47"],"names":["render","_vm","this","_c","_self","staticClass","_v","directives","name","rawName","value","selectedJobCode","expression","on","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","attrs","_l","jobCodeOptions","job","index","key","domProps","code","_s","truncateText","title","selectedRecommendedJob","recommendedJobs","selectedCity","cityOptions","city","updateChart","ref","noDataWarning","_e","staticRenderFns","props","data","type","Object","default","myChart","displayedJobs","defaultColors","methods","text","length","substring","filters","jobCode","recommendedJob","console","log","getFilteredJobData","$nextTick","renderBoxplot","jobProfiles","warn","jobByCode","findJobByCode","push","boxplotData","calculateBoxplotData","find","topJobs","sort","a","b","count","slice","matchedOption","option","cityFilter","salariesToUse","citySalaries","salaries","calculateBoxplotFromSalaries","salaryValues","parseSalariesToValues","min","max","q1","median","q3","q1Index","Math","floor","medianIndex","q3Index","result","values","forEach","salary","salaryStr","String","match","parseInt","avg","$refs","chartContainer","echarts","setOption","textStyle","color","fontSize","left","top","grid","right","bottom","xAxis","axisLabel","yAxis","formatter","series","jobTitles","medianData","item","displayTitles","chartTitle","chartSubtitle","subtext","subtextStyle","tooltip","trigger","backgroundColor","param","seriesIndex","fullTitle","dataIndex","locationText","iqr","toFixed","join","axisPointer","boundaryGap","nameGap","axisLine","lineStyle","interval","split","splitLine","show","nameTextStyle","itemStyle","params","borderColor","emphasis","borderWidth","shadowBlur","shadowColor","symbolSize","label","position","resize","off","componentType","clickedJobTitle","$emit","initialize","initCityOptions","initJobCodeOptions","initRecommendedJobs","allCities","Set","topCities","cityObj","add","prefix","includes","codeNum","toString","padStart","parseFloat","avgSalary","handleResize","setChart","watch","handler","newVal","immediate","mounted","bind","window","addEventListener","beforeDestroy","removeEventListener","dispose","component"],"mappings":"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","file":"js/chunk-69b7b7e7.20ee762c.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"salary-box\"},[_c('div',{staticClass:\"filter-panel\"},[_c('div',{staticClass:\"filter-row\"},[_c('div',{staticClass:\"filter-group\"},[_c('label',[_vm._v(\"职位代码:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedJobCode),expression:\"selectedJobCode\"}],staticClass:\"filter-select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedJobCode=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"选择职位代码\")]),_vm._l((_vm.jobCodeOptions),function(job,index){return _c('option',{key:'code-'+index,domProps:{\"value\":job.code}},[_vm._v(\" \"+_vm._s(job.code)+\" - \"+_vm._s(_vm.truncateText(job.title, 8))+\" \")])})],2)]),_c('div',{staticClass:\"filter-group\"},[_c('label',[_vm._v(\"推荐职位:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedRecommendedJob),expression:\"selectedRecommendedJob\"}],staticClass:\"filter-select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedRecommendedJob=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"选择推荐职位\")]),_vm._l((_vm.recommendedJobs),function(job,index){return _c('option',{key:'rec-'+index,domProps:{\"value\":job.title}},[_vm._v(\" \"+_vm._s(_vm.truncateText(job.title, 12))+\" \")])})],2)])]),_c('div',{staticClass:\"filter-row\"},[_c('div',{staticClass:\"filter-group\"},[_c('label',[_vm._v(\"城市筛选:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedCity),expression:\"selectedCity\"}],staticClass:\"filter-select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedCity=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"全部城市\")]),_vm._l((_vm.cityOptions),function(city,index){return _c('option',{key:'city-'+index,domProps:{\"value\":city}},[_vm._v(\" \"+_vm._s(city)+\" \")])})],2)]),_c('button',{staticClass:\"filter-button\",on:{\"click\":_vm.updateChart}},[_vm._v(\"更新图表\")])])]),_c('div',{ref:\"chartContainer\",staticClass:\"chart-container\"}),(_vm.noDataWarning)?_c('div',{staticClass:\"no-data-warning\"},[_vm._v(\" \"+_vm._s(_vm.noDataWarning)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"salary-box\">\r\n        <!-- 职位筛选框 -->\r\n        <div class=\"filter-panel\">\r\n            <div class=\"filter-row\">\r\n                <div class=\"filter-group\">\r\n                    <label>职位代码:</label>\r\n                    <select v-model=\"selectedJobCode\" class=\"filter-select\">\r\n                        <option value=\"\">选择职位代码</option>\r\n                        <option v-for=\"(job, index) in jobCodeOptions\" :key=\"'code-'+index\" :value=\"job.code\">\r\n                            {{ job.code }} - {{ truncateText(job.title, 8) }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"filter-group\">\r\n                    <label>推荐职位:</label>\r\n                    <select v-model=\"selectedRecommendedJob\" class=\"filter-select\">\r\n                        <option value=\"\">选择推荐职位</option>\r\n                        <option v-for=\"(job, index) in recommendedJobs\" :key=\"'rec-'+index\" :value=\"job.title\">\r\n                            {{ truncateText(job.title, 12) }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"filter-row\">\r\n                <div class=\"filter-group\">\r\n                    <label>城市筛选:</label>\r\n                    <select v-model=\"selectedCity\" class=\"filter-select\">\r\n                        <option value=\"\">全部城市</option>\r\n                        <option v-for=\"(city, index) in cityOptions\" :key=\"'city-'+index\" :value=\"city\">\r\n                            {{ city }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <button @click=\"updateChart\" class=\"filter-button\">更新图表</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <!-- 箱线图容器 -->\r\n        <div ref=\"chartContainer\" class=\"chart-container\"></div>\r\n        \r\n        <!-- 数据提示 -->\r\n        <div v-if=\"noDataWarning\" class=\"no-data-warning\">\r\n            {{ noDataWarning }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 导入echarts库\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'SalaryBox',\r\n    props: {\r\n        data: {\r\n            type: Object,\r\n            default: () => ({})\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            myChart: null,\r\n            selectedJobCode: '',\r\n            selectedRecommendedJob: '',\r\n            selectedCity: '',\r\n            noDataWarning: '',\r\n            jobCodeOptions: [],  // 将由真实数据生成\r\n            recommendedJobs: [], // 将由真实数据生成\r\n            cityOptions: [],     // 将由真实数据生成\r\n            displayedJobs: [],   // 当前显示的职位数据\r\n            defaultColors: ['#2ca8fe', '#a262f2', '#feed2c', '#c0232a', '#fe672c', '#40798c']\r\n        }\r\n    },\r\n    methods: {\r\n        truncateText(text, length) {\r\n            if (!text) return '';\r\n            return text.length > length ? text.substring(0, length) + '...' : text;\r\n        },\r\n        \r\n        updateChart() {\r\n            this.noDataWarning = '';\r\n            \r\n            // 收集选择的条件\r\n            const filters = {\r\n                jobCode: this.selectedJobCode,\r\n                recommendedJob: this.selectedRecommendedJob,\r\n                city: this.selectedCity\r\n            };\r\n            \r\n            console.log('应用筛选条件:', filters);\r\n            \r\n            // 获取符合条件的职位数据\r\n            this.getFilteredJobData(filters);\r\n            \r\n            // 更新图表\r\n            this.$nextTick(() => {\r\n                this.renderBoxplot();\r\n            });\r\n        },\r\n        \r\n        getFilteredJobData(filters) {\r\n            // 从props获取职位数据\r\n            const jobProfiles = this.data && this.data.jobProfiles ? [...this.data.jobProfiles] : [];\r\n            if (jobProfiles.length === 0) {\r\n                console.warn('没有可用的职位数据');\r\n                this.noDataWarning = '暂无职位数据，请确保Excel文件已正确加载';\r\n                return;\r\n            }\r\n            \r\n            // 清空当前显示的职位\r\n            this.displayedJobs = [];\r\n            \r\n            // 基于筛选条件获取职位\r\n            if (filters.jobCode) {\r\n                // 如果选择了职位代码，查找匹配的职位\r\n                const jobByCode = this.findJobByCode(filters.jobCode);\r\n                if (jobByCode) {\r\n                    this.displayedJobs.push({\r\n                        ...jobByCode,\r\n                        boxplotData: this.calculateBoxplotData(jobByCode, filters.city)\r\n                    });\r\n                }\r\n            } else if (filters.recommendedJob) {\r\n                // 如果选择了推荐职位，查找匹配的职位\r\n                const recommendedJob = jobProfiles.find(job => job.title === filters.recommendedJob);\r\n                if (recommendedJob) {\r\n                    this.displayedJobs.push({\r\n                        ...recommendedJob,\r\n                        boxplotData: this.calculateBoxplotData(recommendedJob, filters.city)\r\n                    });\r\n                }\r\n            } else {\r\n                // 如果没有特定选择，显示排名前5的职位\r\n                const topJobs = [...jobProfiles]\r\n                    .sort((a, b) => b.count - a.count)\r\n                    .slice(0, 5);\r\n                \r\n                this.displayedJobs = topJobs.map(job => ({\r\n                    ...job,\r\n                    boxplotData: this.calculateBoxplotData(job, filters.city)\r\n                }));\r\n            }\r\n            \r\n            // 检查是否有有效数据\r\n            if (this.displayedJobs.length === 0) {\r\n                this.noDataWarning = '未找到满足条件的职位数据';\r\n            }\r\n            \r\n            console.log('筛选后的职位数据:', this.displayedJobs);\r\n        },\r\n        \r\n        // 通过职位代码查找职位\r\n        findJobByCode(code) {\r\n            const jobProfiles = this.data && this.data.jobProfiles ? [...this.data.jobProfiles] : [];\r\n            // 在jobCodeOptions中查找对应的职位标题\r\n            const matchedOption = this.jobCodeOptions.find(option => option.code === code);\r\n            \r\n            if (matchedOption && matchedOption.title) {\r\n                // 使用职位标题查找完整的职位信息\r\n                return jobProfiles.find(job => job.title === matchedOption.title);\r\n            }\r\n            \r\n            return null;\r\n        },\r\n        \r\n        // 计算箱线图数据\r\n        calculateBoxplotData(job, cityFilter) {\r\n            if (!job) return [0, 0, 0, 0, 0];\r\n            \r\n            let salariesToUse = [];\r\n            \r\n            // 如果指定了城市筛选，使用该城市的薪资数据\r\n            if (cityFilter && job.citySalaries && job.citySalaries[cityFilter]) {\r\n                salariesToUse = job.citySalaries[cityFilter];\r\n            } else {\r\n                // 否则使用全部薪资数据\r\n                salariesToUse = job.salaries || [];\r\n            }\r\n            \r\n            return this.calculateBoxplotFromSalaries(salariesToUse);\r\n        },\r\n        \r\n        // 从薪资字符串数组计算箱线图数据\r\n        calculateBoxplotFromSalaries(salaries) {\r\n            if (!salaries || !salaries.length) {\r\n                console.log('没有薪资数据');\r\n                return [0, 0, 0, 0, 0];\r\n            }\r\n            \r\n            // 解析薪资字符串为数值\r\n            const salaryValues = this.parseSalariesToValues(salaries);\r\n            \r\n            if (salaryValues.length === 0) {\r\n                console.log('没有有效的薪资值');\r\n                return [0, 0, 0, 0, 0];\r\n            }\r\n            \r\n            // 排序数值以计算百分位数\r\n            salaryValues.sort((a, b) => a - b);\r\n            \r\n            const min = salaryValues[0];\r\n            const max = salaryValues[salaryValues.length - 1];\r\n            \r\n            let q1, median, q3;\r\n            \r\n            if (salaryValues.length === 1) {\r\n                q1 = median = q3 = min;\r\n            } else {\r\n                // 计算四分位数\r\n                const q1Index = Math.floor(salaryValues.length * 0.25);\r\n                const medianIndex = Math.floor(salaryValues.length * 0.5);\r\n                const q3Index = Math.floor(salaryValues.length * 0.75);\r\n                \r\n                q1 = salaryValues[q1Index];\r\n                median = salaryValues[medianIndex];\r\n                q3 = salaryValues[q3Index];\r\n            }\r\n            \r\n            const result = [min, q1, median, q3, max];\r\n            console.log('计算的箱线图数据:', result);\r\n            return result;\r\n        },\r\n        \r\n        // 将薪资字符串解析为数值\r\n        parseSalariesToValues(salaries) {\r\n            const values = [];\r\n            \r\n            salaries.forEach(salary => {\r\n                const salaryStr = String(salary);\r\n                \r\n                // 匹配区间格式: \"10K-15K\" 或 \"10k~15k\"\r\n                let match = salaryStr.match(/(\\d+)(?:k|K)?(?:\\s*[-~]\\s*)(\\d+)(?:k|K)?/i);\r\n                \r\n                if (match) {\r\n                    const min = parseInt(match[1]);\r\n                    const max = parseInt(match[2]);\r\n                    const avg = (min + max) / 2;\r\n                    values.push(avg);\r\n                    return;\r\n                }\r\n                \r\n                // 匹配单值格式: \"15K\"\r\n                match = salaryStr.match(/^(\\d+)(?:k|K)$/i);\r\n                \r\n                if (match) {\r\n                    values.push(parseInt(match[1]));\r\n                    return;\r\n                }\r\n                \r\n                // 匹配纯数字: \"15\"\r\n                match = salaryStr.match(/^(\\d+)$/);\r\n                \r\n                if (match) {\r\n                    values.push(parseInt(match[1]));\r\n                    return;\r\n                }\r\n            });\r\n            \r\n            return values;\r\n        },\r\n        \r\n        // 渲染箱线图\r\n        renderBoxplot() {\r\n            if (!this.myChart) {\r\n                if (!this.$refs.chartContainer) {\r\n                    console.warn('找不到图表容器元素');\r\n                    return;\r\n                }\r\n                \r\n                this.myChart = echarts.init(this.$refs.chartContainer);\r\n            }\r\n            \r\n            if (this.displayedJobs.length === 0) {\r\n                // 如果没有数据，显示空图表\r\n                this.myChart.setOption({\r\n                    title: {\r\n                        text: '职位薪资箱线图分析',\r\n                        textStyle: {\r\n                            color: '#75deef',\r\n                            fontSize: 14\r\n                        },\r\n                        left: 'center',\r\n                        top: 10\r\n                    },\r\n                    grid: {\r\n                        left: '10%',\r\n                        right: '10%',\r\n                        top: '15%',\r\n                        bottom: '15%'\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        data: [],\r\n                        axisLabel: { color: '#75deef' }\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value',\r\n                        name: '薪资 (K/月)',\r\n                        axisLabel: {\r\n                            formatter: '{value}K',\r\n                            color: '#75deef'\r\n                        }\r\n                    },\r\n                    series: []\r\n                });\r\n                return;\r\n            }\r\n            \r\n            // 准备图表数据\r\n            const jobTitles = this.displayedJobs.map(job => job.title);\r\n            const boxplotData = this.displayedJobs.map(job => job.boxplotData);\r\n            \r\n            // 中位数数据用于散点图\r\n            const medianData = boxplotData.map((item, index) => {\r\n                return [index, item[2]]; // 取箱线图的中位数值\r\n            });\r\n            \r\n            // 截取职位名称，防止太长导致显示问题\r\n            const displayTitles = jobTitles.map(title => title.substring(0, 5));\r\n            \r\n            // 计算图表标题\r\n            let chartTitle = '职位薪资箱线图分析';\r\n            let chartSubtitle = '';\r\n            \r\n            if (this.selectedCity) {\r\n                chartSubtitle = `${this.selectedCity}地区`;\r\n            } else {\r\n                chartSubtitle = '全部地区';\r\n            }\r\n            \r\n            // 设置图表选项\r\n            const option = {\r\n                title: {\r\n                    text: chartTitle,\r\n                    subtext: chartSubtitle,\r\n                    textStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 14\r\n                    },\r\n                    subtextStyle: {\r\n                        color: '#6dd0e3',\r\n                        fontSize: 12\r\n                    },\r\n                    left: 'center',\r\n                    top: 5\r\n                },\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    backgroundColor: '#11367a',\r\n                    textStyle: {\r\n                        color: '#6dd0e3'\r\n                    },\r\n                    formatter: (param) => {\r\n                        if (param.seriesIndex === 0) {\r\n                            const value = param.value;\r\n                            // 显示完整职位名称\r\n                            const fullTitle = jobTitles[param.dataIndex] || param.name;\r\n                            const locationText = this.selectedCity || '全部地区';\r\n                            \r\n                            // 计算四分位距\r\n                            const iqr = value[3] - value[1];\r\n                            \r\n                            return [\r\n                                `<div style=\"font-weight:bold;margin-bottom:3px;\">${fullTitle}</div>`,\r\n                                `<div style=\"font-size:12px;margin-bottom:3px;\">${locationText}</div>`,\r\n                                `最大值: ${value[4]}K`,\r\n                                `上四分位: ${value[3]}K`,\r\n                                `<span style=\"font-weight:bold\">中位数: ${value[2]}K</span>`,\r\n                                `下四分位: ${value[1]}K`,\r\n                                `最小值: ${value[0]}K`,\r\n                                `<div style=\"margin-top:3px;font-style:italic;border-top:1px solid rgba(255,255,255,0.2);padding-top:3px;\">`,\r\n                                `四分位距: ${iqr.toFixed(1)}K`,\r\n                                `薪资范围: ${value[4] - value[0]}K`,\r\n                                `</div>`\r\n                            ].join('<br/>');\r\n                        }\r\n                        return param.name + ': ' + param.value + 'K';\r\n                    },\r\n                    axisPointer: {\r\n                        type: 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '10%',\r\n                    right: '10%',\r\n                    top: '20%',\r\n                    bottom: '15%'\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: displayTitles,\r\n                    boundaryGap: true,\r\n                    nameGap: 30,\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#1a3c58'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        color: '#75deef',\r\n                        fontSize: 12,\r\n                        interval: 0,\r\n                        formatter: function (value) {\r\n                            return value.split('').join('\\n');\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: '薪资 (K/月)',\r\n                    min: 0,\r\n                    nameTextStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 12\r\n                    },\r\n                    axisLabel: {\r\n                        formatter: '{value}K',\r\n                        color: '#75deef'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#1a3c58'\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(26,60,88,0.3)'\r\n                        }\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '职位薪资分布',\r\n                        type: 'boxplot',\r\n                        data: boxplotData,\r\n                        itemStyle: {\r\n                            color: (params) => {\r\n                                return this.defaultColors[params.dataIndex % this.defaultColors.length];\r\n                            },\r\n                            borderColor: (params) => {\r\n                                return this.defaultColors[params.dataIndex % this.defaultColors.length];\r\n                            }\r\n                        },\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                borderWidth: 2,\r\n                                shadowBlur: 10,\r\n                                shadowColor: 'rgba(44, 168, 254, 0.5)'\r\n                            }\r\n                        }\r\n                    },\r\n                    // 添加中位数点标识\r\n                    {\r\n                        name: '中位数薪资',\r\n                        type: 'scatter',\r\n                        symbolSize: 8,\r\n                        data: medianData,\r\n                        itemStyle: {\r\n                            color: '#feed2c',\r\n                            borderColor: '#fff',\r\n                            borderWidth: 1\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            formatter: '{c}K',\r\n                            color: '#feed2c',\r\n                            fontSize: 10\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            \r\n            // 渲染图表\r\n            this.myChart.setOption(option, true);\r\n            this.myChart.resize();\r\n            \r\n            // 添加点击事件\r\n            this.myChart.off('click');\r\n            this.myChart.on('click', params => {\r\n                if (params.componentType === 'xAxis') {\r\n                    // 点击职位名称时，仅显示该职位\r\n                    if (jobTitles[params.dataIndex]) {\r\n                        const clickedJobTitle = jobTitles[params.dataIndex];\r\n                        console.log('选择了职位:', clickedJobTitle);\r\n                        \r\n                        // 筛选出该职位\r\n                        this.displayedJobs = this.displayedJobs.filter(job => job.title === clickedJobTitle);\r\n                        \r\n                        // 重新渲染图表\r\n                        this.renderBoxplot();\r\n                        \r\n                        // 触发事件通知父组件\r\n                        this.$emit('job-selected', clickedJobTitle);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        \r\n        // 初始化筛选选项和图表\r\n        initialize() {\r\n            this.noDataWarning = '';\r\n            \r\n            // 获取所有职位数据\r\n            const jobProfiles = this.data && this.data.jobProfiles ? this.data.jobProfiles : [];\r\n            \r\n            if (jobProfiles.length === 0) {\r\n                this.noDataWarning = '未找到职位数据，请确保Excel文件已正确加载';\r\n                return;\r\n            }\r\n            \r\n            // 初始化城市选项\r\n            this.initCityOptions(jobProfiles);\r\n            \r\n            // 初始化职位代码选项\r\n            this.initJobCodeOptions(jobProfiles);\r\n            \r\n            // 初始化推荐职位\r\n            this.initRecommendedJobs(jobProfiles);\r\n            \r\n            // 获取并显示默认数据 (前5个职位)\r\n            this.getFilteredJobData({\r\n                jobCode: '',\r\n                recommendedJob: '',\r\n                city: ''\r\n            });\r\n            \r\n            // 渲染初始图表\r\n            this.$nextTick(() => {\r\n                this.renderBoxplot();\r\n            });\r\n        },\r\n        \r\n        // 初始化城市选项\r\n        initCityOptions(jobProfiles) {\r\n            // 收集所有城市\r\n            const allCities = new Set();\r\n            \r\n            jobProfiles.forEach(job => {\r\n                if (job.topCities && job.topCities.length > 0) {\r\n                    job.topCities.forEach(cityObj => {\r\n                        if (cityObj.city) {\r\n                            allCities.add(cityObj.city);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            \r\n            // 转换为数组并排序\r\n            this.cityOptions = [...allCities].sort();\r\n            console.log('初始化城市选项:', this.cityOptions);\r\n        },\r\n        \r\n        // 初始化职位代码选项\r\n        initJobCodeOptions(jobProfiles) {\r\n            // 为每个职位生成代码\r\n            this.jobCodeOptions = jobProfiles.map((job, index) => {\r\n                // 根据职位名称生成前缀\r\n                let prefix = 'JB';\r\n                const title = job.title;\r\n                \r\n                if (title.includes('前端')) prefix = 'FE';\r\n                else if (title.includes('后端')) prefix = 'BE';\r\n                else if (title.includes('全栈')) prefix = 'FS';\r\n                else if (title.includes('数据')) prefix = 'DA';\r\n                else if (title.includes('设计')) prefix = 'UI';\r\n                else if (title.includes('产品')) prefix = 'PM';\r\n                else if (title.includes('测试')) prefix = 'QA';\r\n                \r\n                // 生成序号\r\n                const codeNum = (index + 1).toString().padStart(3, '0');\r\n                \r\n                return {\r\n                    code: prefix + codeNum,\r\n                    title: job.title\r\n                };\r\n            });\r\n            \r\n            console.log('初始化职位代码选项:', this.jobCodeOptions);\r\n        },\r\n        \r\n        // 初始化推荐职位\r\n        initRecommendedJobs(jobProfiles) {\r\n            // 基于平均薪资选取高薪职位作为推荐\r\n            this.recommendedJobs = [...jobProfiles]\r\n                .sort((a, b) => parseFloat(b.avgSalary) - parseFloat(a.avgSalary))\r\n                .slice(0, 5)\r\n                .map(job => ({\r\n                    title: job.title,\r\n                    avgSalary: job.avgSalary\r\n                }));\r\n                \r\n            console.log('初始化推荐职位:', this.recommendedJobs);\r\n        },\r\n        \r\n        // 当窗口大小改变时调整图表\r\n        handleResize() {\r\n            if (this.myChart) {\r\n                this.myChart.resize();\r\n            }\r\n        },\r\n        \r\n        // 设置图表 (用于外部调用)\r\n        setChart() {\r\n            this.initialize();\r\n        }\r\n    },\r\n    watch: {\r\n        'data.jobProfiles': {\r\n            handler(newVal) {\r\n                if (newVal && newVal.length > 0) {\r\n                    console.log('职位数据更新，重新初始化箱线图，共', newVal.length, '个职位');\r\n                    this.initialize();\r\n                }\r\n            },\r\n            immediate: true\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.initialize();\r\n        });\r\n        \r\n        // 监听窗口大小变化\r\n        this.handleResize = this.handleResize.bind(this);\r\n        window.addEventListener('resize', this.handleResize);\r\n    },\r\n    beforeDestroy() {\r\n        // 移除窗口大小变化监听\r\n        window.removeEventListener('resize', this.handleResize);\r\n        \r\n        // 销毁图表实例\r\n        if (this.myChart) {\r\n            this.myChart.dispose();\r\n            this.myChart = null;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.salary-box {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    .filter-panel {\r\n        padding: 8px;\r\n        background: rgba(13, 36, 81, 0.5);\r\n        border-radius: 4px;\r\n        margin-bottom: 8px;\r\n        \r\n        .filter-row {\r\n            display: flex;\r\n            margin-bottom: 5px;\r\n            \r\n            &:last-child {\r\n                margin-bottom: 0;\r\n            }\r\n        }\r\n        \r\n        .filter-group {\r\n            flex: 1;\r\n            margin-right: 8px;\r\n            display: flex;\r\n            align-items: center;\r\n            \r\n            label {\r\n                color: #75deef;\r\n                font-size: 12px;\r\n                white-space: nowrap;\r\n                margin-right: 5px;\r\n            }\r\n            \r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n        \r\n        .filter-select {\r\n            flex: 1;\r\n            background: rgba(3, 4, 74, 0.8);\r\n            border: 1px solid #2ca8fe;\r\n            border-radius: 4px;\r\n            color: #75deef;\r\n            padding: 5px 8px;\r\n            font-size: 12px;\r\n            outline: none;\r\n            \r\n            option {\r\n                background: rgba(3, 4, 74, 0.9);\r\n            }\r\n        }\r\n        \r\n        .filter-button {\r\n            background: #2ca8fe;\r\n            border: none;\r\n            border-radius: 4px;\r\n            color: white;\r\n            padding: 0 15px;\r\n            cursor: pointer;\r\n            transition: all 0.3s;\r\n            font-size: 12px;\r\n            \r\n            &:hover {\r\n                background: #1c98ee;\r\n            }\r\n        }\r\n    }\r\n    \r\n    .chart-container {\r\n        flex: 1;\r\n        width: 100%;\r\n        position: relative;\r\n        \r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: radial-gradient(ellipse at center, rgba(13, 36, 81, 0) 0%, rgba(13, 36, 81, 0.2) 100%);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n        }\r\n    }\r\n    \r\n    .no-data-warning {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        color: #75deef;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        background: rgba(3, 4, 74, 0.7);\r\n        padding: 10px 15px;\r\n        border-radius: 4px;\r\n        border: 1px solid #2ca8fe;\r\n        z-index: 2;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./salaryBox.vue?vue&type=template&id=39cd4930&scoped=true\"\nimport script from \"./salaryBox.vue?vue&type=script&lang=js\"\nexport * from \"./salaryBox.vue?vue&type=script&lang=js\"\nimport style0 from \"./salaryBox.vue?vue&type=style&index=0&id=39cd4930&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39cd4930\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/.store/less-loader@5.0.0/node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=style&index=0&id=39cd4930&prod&lang=less&scoped=true\""],"sourceRoot":""}