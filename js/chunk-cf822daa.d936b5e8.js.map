{"version":3,"sources":["webpack:///./src/views/components/page1/salaryBox.vue","webpack:///src/views/components/page1/salaryBox.vue","webpack:///./src/views/components/page1/salaryBox.vue?6c2e","webpack:///./src/views/components/page1/salaryBox.vue?0156","webpack:///./src/views/components/page1/salaryBox.vue?99cd"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","selectedJob","expression","on","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","attrs","_v","_l","availableJobs","job","index","key","domProps","title","_s","truncateText","updateChart","ref","staticRenderFns","props","data","type","Object","default","myChart","currentJobTitles","currentBoxplotData","methods","text","length","substring","jobProfiles","selectedProfile","find","console","log","boxplotData","calculateBoxplotData","salaries","existingIndex","findIndex","newBoxplotData","renderChart","salaryValues","salary","salaryStr","String","match","min","parseInt","max","avg","push","sort","a","b","q1","median","q3","q1Index","Math","floor","medianIndex","q3Index","result","initializeChart","jobTitles","topJobs","count","slice","jobs","warn","$refs","chartContainer","echarts","displayTitles","colors","option","textStyle","color","fontSize","left","top","tooltip","trigger","backgroundColor","formatter","param","seriesIndex","fullTitle","dataIndex","join","axisPointer","grid","right","bottom","xAxis","boundaryGap","nameGap","splitArea","show","axisLine","lineStyle","axisLabel","rotate","interval","splitLine","yAxis","nameTextStyle","series","itemStyle","params","borderColor","emphasis","borderWidth","shadowBlur","shadowColor","symbolSize","item","label","position","setOption","resize","setChart","watch","handler","newVal","immediate","mounted","$nextTick","handleResize","window","addEventListener","beforeDestroy","removeEventListener","dispose","component"],"mappings":"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","file":"js/chunk-cf822daa.d936b5e8.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"salary-box\"},[_c('div',{staticClass:\"job-filter\"},[_c('div',{staticClass:\"filter-group\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedJob),expression:\"selectedJob\"}],staticClass:\"filter-select\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedJob=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\"}},[_vm._v(\"选择职位\")]),_vm._l((_vm.availableJobs),function(job,index){return _c('option',{key:index,domProps:{\"value\":job.title}},[_vm._v(\" \"+_vm._s(_vm.truncateText(job.title, 12))+\" \")])})],2)]),_c('button',{staticClass:\"filter-button\",on:{\"click\":_vm.updateChart}},[_vm._v(\"更新\")])]),_c('div',{ref:\"chartContainer\",staticClass:\"chart-container\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"salary-box\">\r\n        <!-- 职位筛选框 -->\r\n        <div class=\"job-filter\">\r\n            <div class=\"filter-group\">\r\n                <select v-model=\"selectedJob\" class=\"filter-select\">\r\n                    <option value=\"\">选择职位</option>\r\n                    <option v-for=\"(job, index) in availableJobs\" :key=\"index\" :value=\"job.title\">\r\n                        {{ truncateText(job.title, 12) }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <button @click=\"updateChart\" class=\"filter-button\">更新</button>\r\n        </div>\r\n        \r\n        <!-- 箱线图容器 -->\r\n        <div ref=\"chartContainer\" class=\"chart-container\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 直接导入echarts库\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'SalaryBox',\r\n    props: {\r\n        data: {\r\n            type: Object,\r\n            default: () => ({})\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            myChart: null,\r\n            selectedJob: '',\r\n            availableJobs: [],\r\n            currentJobTitles: [],\r\n            currentBoxplotData: []\r\n        }\r\n    },\r\n    methods: {\r\n        truncateText(text, length) {\r\n            if (!text) return '';\r\n            return text.length > length ? text.substring(0, length) : text;\r\n        },\r\n        \r\n        updateChart() {\r\n            if (!this.selectedJob) return;\r\n            \r\n            // 从原始数据中找到选择的职位\r\n            const jobProfiles = this.data && this.data.jobProfiles ? this.data.jobProfiles : [];\r\n            const selectedProfile = jobProfiles.find(job => job.title === this.selectedJob);\r\n            \r\n            if (selectedProfile) {\r\n                console.log('选择的职位数据:', selectedProfile);\r\n                \r\n                // 计算选择职位的箱线图数据\r\n                const boxplotData = this.calculateBoxplotData(selectedProfile.salaries);\r\n                \r\n                // 检查是否已存在此职位\r\n                const existingIndex = this.currentJobTitles.findIndex(title => \r\n                    title === this.selectedJob);\r\n                \r\n                if (existingIndex !== -1) {\r\n                    // 更新现有数据\r\n                    const newBoxplotData = [...this.currentBoxplotData];\r\n                    newBoxplotData[existingIndex] = boxplotData;\r\n                    this.currentBoxplotData = newBoxplotData;\r\n                } else {\r\n                    // 添加新职位\r\n                    this.currentJobTitles = [...this.currentJobTitles, this.selectedJob];\r\n                    this.currentBoxplotData = [...this.currentBoxplotData, boxplotData];\r\n                }\r\n                \r\n                // 重绘图表\r\n                this.renderChart();\r\n            }\r\n        },\r\n        \r\n        calculateBoxplotData(salaries) {\r\n            if (!salaries || !salaries.length) {\r\n                console.log('没有薪资数据');\r\n                return [0, 0, 0, 0, 0];\r\n            }\r\n            \r\n            console.log('原始薪资数据:', salaries);\r\n            \r\n            // 解析薪资字符串为数值\r\n            const salaryValues = [];\r\n            \r\n            for (const salary of salaries) {\r\n                const salaryStr = String(salary);\r\n                \r\n                // 尝试匹配不同的薪资格式\r\n                // 格式1: \"10K-15K\", \"10k~15k\", \"10-15K\"等带区间的格式\r\n                let match = salaryStr.match(/(\\d+)(?:k|K)?(?:\\s*[-~]\\s*)(\\d+)(?:k|K)?/i);\r\n                \r\n                if (match) {\r\n                    const min = parseInt(match[1]);\r\n                    const max = parseInt(match[2]);\r\n                    const avg = (min + max) / 2;\r\n                    salaryValues.push(avg);\r\n                    continue;\r\n                }\r\n                \r\n                // 格式2: \"15K\", \"15k\"等单值格式\r\n                match = salaryStr.match(/^(\\d+)(?:k|K)$/i);\r\n                \r\n                if (match) {\r\n                    const value = parseInt(match[1]);\r\n                    salaryValues.push(value);\r\n                    continue;\r\n                }\r\n                \r\n                // 格式3: 纯数字 \"15\", \"20\"\r\n                match = salaryStr.match(/^(\\d+)$/);\r\n                \r\n                if (match) {\r\n                    const value = parseInt(match[1]);\r\n                    salaryValues.push(value);\r\n                }\r\n            }\r\n            \r\n            console.log('解析后的薪资值:', salaryValues);\r\n            \r\n            if (salaryValues.length === 0) {\r\n                console.log('没有有效的薪资值');\r\n                return [0, 0, 0, 0, 0];\r\n            }\r\n            \r\n            // 排序数值以计算百分位数\r\n            salaryValues.sort((a, b) => a - b);\r\n            \r\n            const min = salaryValues[0];\r\n            const max = salaryValues[salaryValues.length - 1];\r\n            \r\n            let q1, median, q3;\r\n            \r\n            if (salaryValues.length === 1) {\r\n                q1 = median = q3 = min;\r\n            } else {\r\n                // 计算四分位数\r\n                const q1Index = Math.floor(salaryValues.length * 0.25);\r\n                const medianIndex = Math.floor(salaryValues.length * 0.5);\r\n                const q3Index = Math.floor(salaryValues.length * 0.75);\r\n                \r\n                q1 = salaryValues[q1Index];\r\n                median = salaryValues[medianIndex];\r\n                q3 = salaryValues[q3Index];\r\n            }\r\n            \r\n            const result = [min, q1, median, q3, max];\r\n            console.log('计算的箱线图数据:', result);\r\n            return result;\r\n        },\r\n        \r\n        initializeChart() {\r\n            console.log('初始化箱线图');\r\n            \r\n            // 准备数据\r\n            let jobTitles = [];\r\n            let boxplotData = [];\r\n            \r\n            // 从父组件传递的数据中提取职位信息\r\n            const jobProfiles = this.data && this.data.jobProfiles ? this.data.jobProfiles : [];\r\n            \r\n            if (jobProfiles.length > 0) {\r\n                console.log('找到职位数据:', jobProfiles.length, '条');\r\n                \r\n                // 按职位数量排序并取前5个\r\n                const topJobs = [...jobProfiles]\r\n                    .sort((a, b) => b.count - a.count)\r\n                    .slice(0, 5);\r\n                \r\n                jobTitles = topJobs.map(job => job.title);\r\n                \r\n                // 为每个职位计算箱线图数据\r\n                boxplotData = topJobs.map(job => this.calculateBoxplotData(job.salaries));\r\n                \r\n                // 保存当前数据\r\n                this.currentJobTitles = jobTitles;\r\n                this.currentBoxplotData = boxplotData;\r\n                \r\n                // 更新可选职位列表\r\n                this.availableJobs = jobProfiles.map(job => ({\r\n                    title: job.title\r\n                }));\r\n                \r\n                console.log('初始化图表数据:', {\r\n                    jobs: jobTitles,\r\n                    data: boxplotData\r\n                });\r\n            } else {\r\n                console.warn('未找到职位数据, 使用备用数据');\r\n                \r\n                // 备用数据\r\n                jobTitles = ['前端开发', '后端开发', '产品经理', 'UI设计师', '数据分析师'];\r\n                boxplotData = [\r\n                    [3, 5, 8, 12, 15],\r\n                    [5, 8, 12, 15, 20],\r\n                    [8, 12, 15, 20, 25],\r\n                    [5, 8, 10, 15, 18],\r\n                    [4, 7, 10, 14, 18]\r\n                ];\r\n                \r\n                this.currentJobTitles = jobTitles;\r\n                this.currentBoxplotData = boxplotData;\r\n            }\r\n            \r\n            // 创建图表实例\r\n            if (!this.myChart && this.$refs.chartContainer) {\r\n                this.myChart = echarts.init(this.$refs.chartContainer);\r\n            }\r\n            \r\n            // 渲染图表\r\n            this.renderChart();\r\n        },\r\n        \r\n        renderChart() {\r\n            if (!this.myChart) return;\r\n            \r\n            // 确保有数据\r\n            if (this.currentJobTitles.length === 0 || this.currentBoxplotData.length === 0) {\r\n                console.warn('没有数据可以渲染');\r\n                return;\r\n            }\r\n            \r\n            // 截取职位名称 - 只截取前5个字符，防止显示溢出\r\n            const displayTitles = this.currentJobTitles.map(title => this.truncateText(title, 5));\r\n            \r\n            // 设置箱线图配色方案\r\n            const colors = ['#2ca8fe', '#a262f2', '#feed2c', '#c0232a', '#fe672c', '#40798c'];\r\n            \r\n            const option = {\r\n                title: {\r\n                    text: '职位薪资对比分析',\r\n                    textStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 14\r\n                    },\r\n                    left: 'center',\r\n                    top: 10\r\n                },\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    backgroundColor: '#11367a',\r\n                    textStyle: {\r\n                        color: '#6dd0e3'\r\n                    },\r\n                    formatter: (param) => {\r\n                        if (param.seriesIndex === 0) {\r\n                            const value = param.value;\r\n                            // 显示完整职位名称\r\n                            const fullTitle = this.currentJobTitles[param.dataIndex] || param.name;\r\n                            \r\n                            return [\r\n                                fullTitle + ' 薪资统计 (K):',\r\n                                '最大值: ' + value[4],\r\n                                '上四分位: ' + value[3],\r\n                                '中位数: ' + value[2],\r\n                                '下四分位: ' + value[1],\r\n                                '最小值: ' + value[0]\r\n                            ].join('<br/>');\r\n                        }\r\n                        return param.name + ': ' + param.value + 'K';\r\n                    },\r\n                    axisPointer: {\r\n                        type: 'shadow'\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '10%',\r\n                    right: '10%',\r\n                    top: '15%',\r\n                    bottom: '15%'\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                    data: displayTitles,\r\n                    boundaryGap: true,\r\n                    nameGap: 30,\r\n                    splitArea: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#1a3c58'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        color: '#75deef',\r\n                        fontSize: 12,\r\n                        rotate: 30,  // 旋转标签以避免重叠\r\n                        interval: 0   // 显示所有标签\r\n                    },\r\n                    splitLine: {\r\n                        show: false\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: '薪资 (K/月)',\r\n                    min: 0,\r\n                    nameTextStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 12\r\n                    },\r\n                    axisLabel: {\r\n                        formatter: '{value}K',\r\n                        color: '#75deef'\r\n                    },\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: '#1a3c58'\r\n                        }\r\n                    },\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(26,60,88,0.3)'\r\n                        }\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '职位薪资分布',\r\n                        type: 'boxplot',\r\n                        data: this.currentBoxplotData,\r\n                        tooltip: {\r\n                            formatter: (param) => {\r\n                                // 显示完整职位名称\r\n                                const fullTitle = this.currentJobTitles[param.dataIndex] || param.name;\r\n                                \r\n                                return [\r\n                                    fullTitle + ' 薪资统计 (K):',\r\n                                    '最大值: ' + param.data[4],\r\n                                    '上四分位: ' + param.data[3],\r\n                                    '中位数: ' + param.data[2],\r\n                                    '下四分位: ' + param.data[1],\r\n                                    '最小值: ' + param.data[0]\r\n                                ].join('<br/>');\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            color: function(params) {\r\n                                return colors[params.dataIndex % colors.length];\r\n                            },\r\n                            borderColor: function(params) {\r\n                                return colors[params.dataIndex % colors.length];\r\n                            }\r\n                        },\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                borderWidth: 2,\r\n                                shadowBlur: 10,\r\n                                shadowColor: 'rgba(44, 168, 254, 0.5)'\r\n                            }\r\n                        }\r\n                    },\r\n                    // 添加中位数点标识\r\n                    {\r\n                        name: '中位数薪资',\r\n                        type: 'scatter',\r\n                        symbolSize: 8,\r\n                        data: this.currentBoxplotData.map((item, index) => {\r\n                            return [index, item[2]]; // 箱线图的中位数值\r\n                        }),\r\n                        itemStyle: {\r\n                            color: '#feed2c',\r\n                            borderColor: '#fff',\r\n                            borderWidth: 1\r\n                        },\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top',\r\n                            formatter: '{c}K',\r\n                            color: '#feed2c',\r\n                            fontSize: 10\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            \r\n            // 设置并渲染图表\r\n            this.myChart.setOption(option);\r\n            this.myChart.resize();\r\n        },\r\n        \r\n        setChart() {\r\n            this.initializeChart();\r\n        }\r\n    },\r\n    watch: {\r\n        // 修复无限循环问题 - 不要深度监听data\r\n        'data.jobProfiles': {\r\n            handler(newVal) {\r\n                console.log('职位数据更新，重新初始化图表');\r\n                this.initializeChart();\r\n            },\r\n            immediate: true\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.initializeChart();\r\n        });\r\n        \r\n        // 监听窗口大小变化，重绘图表\r\n        this.handleResize = () => {\r\n            if (this.myChart) {\r\n                this.myChart.resize();\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('resize', this.handleResize);\r\n    },\r\n    beforeDestroy() {\r\n        // 移除窗口大小变化监听\r\n        window.removeEventListener('resize', this.handleResize);\r\n        \r\n        // 销毁图表实例\r\n        if (this.myChart) {\r\n            this.myChart.dispose();\r\n            this.myChart = null;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.salary-box {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    \r\n    .job-filter {\r\n        display: flex;\r\n        padding: 8px;\r\n        background: rgba(13, 36, 81, 0.5);\r\n        border-radius: 4px;\r\n        margin-bottom: 8px;\r\n        \r\n        .filter-group {\r\n            flex: 1;\r\n            margin-right: 8px;\r\n        }\r\n        \r\n        .filter-select {\r\n            width: 100%;\r\n            background: rgba(3, 4, 74, 0.8);\r\n            border: 1px solid #2ca8fe;\r\n            border-radius: 4px;\r\n            color: #75deef;\r\n            padding: 5px 8px;\r\n            font-size: 12px;\r\n            outline: none;\r\n            \r\n            option {\r\n                background: rgba(3, 4, 74, 0.9);\r\n            }\r\n        }\r\n        \r\n        .filter-button {\r\n            background: #2ca8fe;\r\n            border: none;\r\n            border-radius: 4px;\r\n            color: white;\r\n            padding: 0 15px;\r\n            cursor: pointer;\r\n            transition: all 0.3s;\r\n            \r\n            &:hover {\r\n                background: #1c98ee;\r\n            }\r\n        }\r\n    }\r\n    \r\n    .chart-container {\r\n        flex: 1;\r\n        width: 100%;\r\n        position: relative;\r\n        \r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background: radial-gradient(ellipse at center, rgba(13, 36, 81, 0) 0%, rgba(13, 36, 81, 0.2) 100%);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./salaryBox.vue?vue&type=template&id=1043cf4d&scoped=true\"\nimport script from \"./salaryBox.vue?vue&type=script&lang=js\"\nexport * from \"./salaryBox.vue?vue&type=script&lang=js\"\nimport style0 from \"./salaryBox.vue?vue&type=style&index=0&id=1043cf4d&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1043cf4d\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/.store/less-loader@5.0.0/node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./salaryBox.vue?vue&type=style&index=0&id=1043cf4d&prod&lang=less&scoped=true\""],"sourceRoot":""}