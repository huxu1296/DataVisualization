{"version":3,"sources":["webpack:///./src/views/components/page1/jobClustering.vue?7510","webpack:///./src/views/components/page1/jobClustering.vue","webpack:///src/views/components/page1/jobClustering.vue","webpack:///./src/views/components/page1/jobClustering.vue?5d02","webpack:///./src/views/components/page1/jobClustering.vue?a8ca"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticStyle","attrs","staticRenderFns","name","props","data","type","Object","default","jobClusters","chartInstance","methods","setChart","$refs","clusterChart","dispose","echarts","console","log","clusterTypes","color","generateClusterData","clusterType","count","centerX","centerY","rangeX","rangeY","i","x","Math","random","y","push","series","map","cluster","itemStyle","emphasis","borderColor","borderWidth","shadowBlur","shadowColor","symbolSize","markAreaSeries","markArea","silent","label","show","fontSize","position","xAxis","yAxis","connectionLine","lineStyle","width","formatter","backgroundColor","padding","option","title","text","left","top","textStyle","grid","right","bottom","tooltip","trigger","params","seriesName","value","toFixed","legend","item","itemWidth","itemHeight","min","max","splitLine","axisLine","axisLabel","setOption","handleResize","resize","window","addEventListener","$once","removeEventListener","error","mounted","setTimeout","watch","handler","deep","component"],"mappings":"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","file":"js/chunk-0670a06d.b02aea7f.js","sourcesContent":["export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/.store/less-loader@5.0.0/node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobClustering.vue?vue&type=style&index=0&id=5bb3909a&prod&lang=less&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"job-clustering\"},[_c('div',{ref:\"clusterChart\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"cluster-chart\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"job-clustering\">\r\n    <div id=\"cluster-chart\" ref=\"clusterChart\" style=\"width: 100%; height: 100%;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 直接导入echarts库\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'jobClustering',\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: () => ({\r\n        jobClusters: []\r\n      })\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chartInstance: null\r\n    };\r\n  },\r\n  methods: {\r\n    setChart() {\r\n      // 确保DOM元素已经渲染\r\n      if (!this.$refs.clusterChart) {\r\n        console.error('图表容器未找到');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // 如果已有实例，先销毁\r\n        if (this.chartInstance) {\r\n          this.chartInstance.dispose();\r\n        }\r\n        \r\n        // 创建新实例\r\n        this.chartInstance = echarts.init(this.$refs.clusterChart);\r\n        \r\n        console.log('初始化职位聚类图表...');\r\n\r\n        // 定义四种职位聚类\r\n        const clusterTypes = [\r\n          { name: '优新技能型', color: '#143d29' },  // 深绿色\r\n          { name: '基薪普及型', color: '#1d3246' },  // 深蓝色\r\n          { name: '平薪新人型', color: '#40798c' },  // 浅蓝绿色\r\n          { name: '高薪管理型', color: '#055a3d' }   // 绿色\r\n        ];\r\n        \r\n        // 生成模拟的聚类数据点\r\n        const generateClusterData = (clusterType, count) => {\r\n          const data = [];\r\n          let centerX, centerY, rangeX, rangeY;\r\n          \r\n          // 根据聚类类型设置中心点和分布范围\r\n          switch(clusterType) {\r\n            case '优新技能型':\r\n              centerX = -50; centerY = 20; rangeX = 80; rangeY = 70;\r\n              break;\r\n            case '基薪普及型':\r\n              centerX = -60; centerY = -10; rangeX = 100; rangeY = 80;\r\n              break;\r\n            case '平薪新人型':\r\n              centerX = 10; centerY = -15; rangeX = 100; rangeY = 70;\r\n              break;\r\n            case '高薪管理型':\r\n              centerX = 100; centerY = 0; rangeX = 60; rangeY = 40;\r\n              break;\r\n            default:\r\n              centerX = 0; centerY = 0; rangeX = 50; rangeY = 50;\r\n          }\r\n          \r\n          // 为每个聚类生成随机的数据点\r\n          for (let i = 0; i < count; i++) {\r\n            const x = centerX + (Math.random() - 0.5) * rangeX;\r\n            const y = centerY + (Math.random() - 0.5) * rangeY;\r\n            \r\n            data.push([x, y]);\r\n          }\r\n          \r\n          return data;\r\n        };\r\n        \r\n        // 准备各个聚类的散点数据\r\n        const series = clusterTypes.map(cluster => {\r\n          const count = cluster.name === '高薪管理型' || cluster.name === '优新技能型' ? 80 : 150;\r\n          return {\r\n            name: cluster.name,\r\n            type: 'scatter',\r\n            itemStyle: {\r\n              color: cluster.color\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                borderColor: '#fff',\r\n                borderWidth: 1,\r\n                shadowBlur: 10,\r\n                shadowColor: 'rgba(117, 222, 239, 0.5)'\r\n              }\r\n            },\r\n            symbolSize: 8,\r\n            data: generateClusterData(cluster.name, count)\r\n          };\r\n        });\r\n        \r\n        // 将界定区域作为单独的系列添加，这样会显示在点的上面\r\n        // 为优新技能型与高薪管理型添加界定区域\r\n        const markAreaSeries = {\r\n          name: '界定区域',\r\n          type: 'scatter',\r\n          data: [],\r\n          markArea: {\r\n            silent: true,\r\n            itemStyle: {\r\n              color: 'rgba(255, 0, 0, 0.1)',\r\n              borderColor: '#c0232a',\r\n              borderWidth: 2,\r\n            },\r\n            label: {\r\n              show: true,\r\n              color: '#feed2c',\r\n              fontSize: 12,\r\n              position: 'top'\r\n            },\r\n            data: [\r\n              // 优新技能型界定区域\r\n              [\r\n                { name: '优新技能型', xAxis: -70, yAxis: 10 },\r\n                { xAxis: -30, yAxis: 40 }\r\n              ],\r\n              // 高薪管理型界定区域\r\n              [\r\n                { name: '高薪管理型', xAxis: 80, yAxis: -5 },\r\n                { xAxis: 120, yAxis: 15 }\r\n              ]\r\n            ]\r\n          }\r\n        };\r\n        \r\n        // 添加两点之间的连线\r\n        const connectionLine = {\r\n          name: '相似度连线',\r\n          type: 'line',\r\n          data: [[-40, 25], [100, 5]],\r\n          lineStyle: {\r\n            color: '#feed2c',\r\n            width: 1,\r\n            type: 'dashed'\r\n          },\r\n          label: {\r\n            show: true,\r\n            position: 'middle',\r\n            formatter: '相似度: -7.235',\r\n            color: '#feed2c',\r\n            fontSize: 10,\r\n            backgroundColor: 'rgba(13, 36, 81, 0.7)',\r\n            padding: [3, 5]\r\n          }\r\n        };\r\n        \r\n        // 将所有系列添加到图表中\r\n        series.push(markAreaSeries);\r\n        series.push(connectionLine);\r\n        \r\n        const option = {\r\n          backgroundColor: 'transparent',\r\n          title: {\r\n            text: '多维度职位聚类概览图',\r\n            left: 'center',\r\n            top: 10,\r\n            textStyle: {\r\n              color: '#75deef',\r\n              fontSize: 14\r\n            }\r\n          },\r\n          grid: {\r\n            left: '5%',\r\n            right: '5%',\r\n            top: 50,\r\n            bottom: 30\r\n          },\r\n          tooltip: {\r\n            trigger: 'item',\r\n            backgroundColor: 'rgba(13, 36, 81, 0.8)',\r\n            borderColor: '#2ca8fe',\r\n            textStyle: {\r\n              color: '#75deef'\r\n            },\r\n            formatter: function(params) {\r\n              if (params.seriesName === '特定职位') {\r\n                return params.name + '<br/>位置: (' + params.value[0].toFixed(1) + ', ' + params.value[1].toFixed(1) + ')';\r\n              }\r\n              return params.seriesName + '<br/>位置: (' + params.value[0].toFixed(1) + ', ' + params.value[1].toFixed(1) + ')';\r\n            }\r\n          },\r\n          legend: {\r\n            data: clusterTypes.map(item => item.name),\r\n            top: 30,\r\n            itemWidth: 12,\r\n            itemHeight: 12,\r\n            textStyle: {\r\n              color: '#75deef',\r\n              fontSize: 12\r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'value',\r\n            min: -150,\r\n            max: 150,\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: 'rgba(13, 36, 81, 0.3)'\r\n              }\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#0D2451'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              color: '#75deef',\r\n              fontSize: 10\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            min: -60,\r\n            max: 80,\r\n            splitLine: {\r\n              lineStyle: {\r\n                color: 'rgba(13, 36, 81, 0.3)'\r\n              }\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                color: '#0D2451'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              color: '#75deef',\r\n              fontSize: 10\r\n            }\r\n          },\r\n          series: series\r\n        };\r\n        \r\n        this.chartInstance.setOption(option);\r\n        \r\n        // 自适应窗口大小变化\r\n        const handleResize = () => {\r\n          if (this.chartInstance) {\r\n            this.chartInstance.resize();\r\n          }\r\n        };\r\n        \r\n        window.addEventListener('resize', handleResize);\r\n        \r\n        // 组件销毁时移除事件监听\r\n        this.$once('hook:beforeDestroy', () => {\r\n          window.removeEventListener('resize', handleResize);\r\n          if (this.chartInstance) {\r\n            this.chartInstance.dispose();\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('初始化图表失败:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    console.log('jobClustering组件已挂载');\r\n    // 稍微延迟一下，确保DOM已完全渲染\r\n    setTimeout(() => {\r\n      this.setChart();\r\n    }, 300);\r\n  },\r\n  watch: {\r\n    'data': {\r\n      handler() {\r\n        // 稍微延迟一下，确保DOM已完全渲染\r\n        setTimeout(() => {\r\n          this.setChart();\r\n        }, 100);\r\n      },\r\n      deep: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.job-clustering {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobClustering.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobClustering.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./jobClustering.vue?vue&type=template&id=5bb3909a&scoped=true\"\nimport script from \"./jobClustering.vue?vue&type=script&lang=js\"\nexport * from \"./jobClustering.vue?vue&type=script&lang=js\"\nimport style0 from \"./jobClustering.vue?vue&type=style&index=0&id=5bb3909a&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5bb3909a\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}