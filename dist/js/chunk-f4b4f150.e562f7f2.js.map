{"version":3,"sources":["webpack:///./src/views/components/page1/jobRadar.vue","webpack:///src/views/components/page1/jobRadar.vue","webpack:///./src/views/components/page1/jobRadar.vue?52c6","webpack:///./src/views/components/page1/jobRadar.vue?7b8e","webpack:///./src/views/components/page1/jobRadar.vue?3c29"],"names":["render","_vm","this","_c","_self","staticClass","staticRenderFns","name","props","data","type","Object","default","dimensions","scores","jobData","myChart","activeJobIndex","computed","truncatedJobTitles","map","job","title","length","substring","methods","setChart","console","warn","value","truncateJobTitle","option","text","textStyle","color","fontSize","left","top","tooltip","trigger","backgroundColor","legend","item","bottom","selectedMode","selected","getInitialSelected","radar","indicator","dim","max","radius","center","axisName","splitLine","lineStyle","splitArea","areaStyle","series","index","getJobColor","width","getJobAreaColor","itemStyle","echarts","$el","on","params","componentType","jobIndex","findIndex","seriesName","$emit","values","selectedName","clear","resize","setOption","colors","forEach","watch","handler","$nextTick","deep","mounted","window","addEventListener","beforeDestroy","removeEventListener","handleResize","dispose","component"],"mappings":"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","file":"js/chunk-f4b4f150.e562f7f2.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"job-radar\"})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"job-radar\"></div>\r\n</template>\r\n\r\n<script>\r\n// 直接导入echarts库\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: 'JobRadar',\r\n    props: {\r\n        data: {\r\n            type: Object,\r\n            default: () => ({\r\n                dimensions: ['指标1', '指标2', '指标3', '指标4', '指标5'],\r\n                scores: [60, 70, 80, 75, 65],\r\n                jobData: [] // 添加职位数据接收\r\n            })\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            myChart: null,\r\n            activeJobIndex: 0\r\n        }\r\n    },\r\n    computed: {\r\n        // 获取截断后的职位名称\r\n        truncatedJobTitles() {\r\n            if (!this.data.jobData) return [];\r\n            return this.data.jobData.map(job => {\r\n                const title = job.name || '';\r\n                return title.length > 10 ? title.substring(0, 10) : title;\r\n            });\r\n        }\r\n    },\r\n    methods: {\r\n        setChart() {\r\n            // 数据验证\r\n            if (!this.data) {\r\n                console.warn('JobRadar组件: 数据未准备好');\r\n                return;\r\n            }\r\n            \r\n            // 基础维度数据\r\n            let dimensions = this.data.dimensions || ['薪资差异', '经验差异', '学历差异', '行业差异', '地域差异'];\r\n            \r\n            // 职位数据\r\n            let jobData = [];\r\n            \r\n            // 使用从数据处理器获取的真实职位数据，如果存在\r\n            if (this.data.jobData && this.data.jobData.length > 0) {\r\n                jobData = this.data.jobData.map(job => ({\r\n                    value: job.value,\r\n                    name: this.truncateJobTitle(job.name)\r\n                }));\r\n            } else {\r\n                // 否则使用基础分数\r\n                jobData = [{\r\n                    value: this.data.scores || [60, 70, 80, 75, 65],\r\n                    name: '综合差异度'\r\n                }];\r\n            }\r\n            \r\n            // 构建Echarts配置\r\n            const option = {\r\n                title: {\r\n                    text: '职位差异度分析',\r\n                    textStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 14\r\n                    },\r\n                    left: 'center',\r\n                    top: 10\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    backgroundColor: '#11367a',\r\n                    textStyle: {\r\n                        color: '#6dd0e3',\r\n                        fontSize: 10\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: jobData.map(item => item.name),\r\n                    bottom: 0,\r\n                    textStyle: {\r\n                        color: '#75deef',\r\n                        fontSize: 12\r\n                    },\r\n                    selectedMode: 'single', // 只能选择一个\r\n                    selected: this.getInitialSelected(jobData) // 设置初始选中状态\r\n                },\r\n                radar: {\r\n                    indicator: dimensions.map(dim => ({\r\n                        name: dim,\r\n                        max: 100\r\n                    })),\r\n                    radius: '60%',\r\n                    center: ['50%', '50%'],\r\n                    axisName: {\r\n                        color: '#75deef',\r\n                        fontSize: 11\r\n                    },\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(26,60,88,0.5)'\r\n                        }\r\n                    },\r\n                    splitArea: {\r\n                        areaStyle: {\r\n                            color: ['rgba(0,20,60,0.3)', 'rgba(0,20,60,0.5)']\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                    name: '差异度评分',\r\n                    type: 'radar',\r\n                    data: jobData.map((job, index) => ({\r\n                        value: job.value,\r\n                        name: job.name,\r\n                        lineStyle: {\r\n                            color: this.getJobColor(index),\r\n                            width: 2\r\n                        },\r\n                        areaStyle: {\r\n                            color: this.getJobAreaColor(index)\r\n                        },\r\n                        itemStyle: {\r\n                            color: this.getJobColor(index)\r\n                        }\r\n                    }))\r\n                }]\r\n            };\r\n            \r\n            // 初始化或更新图表\r\n            if (!this.myChart) {\r\n                this.myChart = echarts.init(this.$el);\r\n                \r\n                // 添加图表点击事件\r\n                this.myChart.on('click', params => {\r\n                    if (params.componentType === 'series') {\r\n                        // 获取点击的职位索引\r\n                        const jobIndex = jobData.findIndex(job => job.name === params.seriesName);\r\n                        if (jobIndex >= 0) {\r\n                            this.activeJobIndex = jobIndex;\r\n                            // 触发自定义事件\r\n                            this.$emit('job-selected', {\r\n                                name: params.seriesName,\r\n                                values: params.value\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                // 添加图例选择事件\r\n                this.myChart.on('legendselectchanged', params => {\r\n                    // 获取当前选中的职位名称\r\n                    const selectedName = params.name;\r\n                    const jobIndex = jobData.findIndex(job => job.name === selectedName);\r\n                    if (jobIndex >= 0) {\r\n                        this.activeJobIndex = jobIndex;\r\n                        // 触发自定义事件\r\n                        this.$emit('job-selected', {\r\n                            name: selectedName,\r\n                            values: jobData[jobIndex].value\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            \r\n            this.myChart.clear();\r\n            this.myChart.resize();\r\n            this.myChart.setOption(option);\r\n        },\r\n        \r\n        // 截断职位标题\r\n        truncateJobTitle(title) {\r\n            if (!title) return '';\r\n            return title.length > 10 ? title.substring(0, 10) : title;\r\n        },\r\n        \r\n        // 获取职位对应的颜色\r\n        getJobColor(index) {\r\n            const colors = ['#2ca8fe', '#c0232a', '#feed2c', '#a262f2', '#40798c', '#055a3d'];\r\n            return colors[index % colors.length];\r\n        },\r\n        \r\n        // 获取职位区域颜色（半透明）\r\n        getJobAreaColor(index) {\r\n            const colors = [\r\n                'rgba(44, 168, 254, 0.3)',\r\n                'rgba(192, 35, 42, 0.3)',\r\n                'rgba(254, 237, 44, 0.3)',\r\n                'rgba(162, 98, 242, 0.3)',\r\n                'rgba(64, 121, 140, 0.3)',\r\n                'rgba(5, 90, 61, 0.3)'\r\n            ];\r\n            return colors[index % colors.length];\r\n        },\r\n        \r\n        // 获取初始选中状态\r\n        getInitialSelected(jobData) {\r\n            const selected = {};\r\n            jobData.forEach((job, index) => {\r\n                selected[job.name] = index === this.activeJobIndex;\r\n            });\r\n            return selected;\r\n        }\r\n    },\r\n    watch: {\r\n        data: {\r\n            handler() {\r\n                this.$nextTick(() => {\r\n                    this.setChart();\r\n                });\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.setChart();\r\n        });\r\n        \r\n        // 监听窗口大小变化\r\n        window.addEventListener('resize', () => {\r\n            if (this.myChart) {\r\n                this.myChart.resize();\r\n            }\r\n        });\r\n    },\r\n    beforeDestroy() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n        \r\n        if (this.myChart) {\r\n            this.myChart.dispose();\r\n            this.myChart = null;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.job-radar {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobRadar.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/.store/thread-loader@2.1.3/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/.store/babel-loader@8.4.1/node_modules/babel-loader/lib/index.js!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobRadar.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./jobRadar.vue?vue&type=template&id=4308a7f4&scoped=true\"\nimport script from \"./jobRadar.vue?vue&type=script&lang=js\"\nexport * from \"./jobRadar.vue?vue&type=script&lang=js\"\nimport style0 from \"./jobRadar.vue?vue&type=style&index=0&id=4308a7f4&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4308a7f4\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../node_modules/.store/mini-css-extract-plugin@0.9.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/.store/css-loader@3.6.0/node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/.store/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/.store/less-loader@5.0.0/node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../../node_modules/.store/cache-loader@4.1.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./jobRadar.vue?vue&type=style&index=0&id=4308a7f4&prod&lang=less&scoped=true\""],"sourceRoot":""}